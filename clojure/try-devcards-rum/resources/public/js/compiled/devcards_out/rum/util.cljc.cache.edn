{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rum.util, :imports nil, :requires nil, :uses nil, :defs {collect {:protocol-inline nil, :meta {:file "/Users/nostowe/personal/rubygeek/clojure/try-devcards-rum/resources/public/js/compiled/devcards_out/rum/util.cljc", :line 4, :column 7, :end-line 4, :end-column 14, :arglists (quote ([key mixins]))}, :name rum.util/collect, :variadic false, :file "resources/public/js/compiled/devcards_out/rum/util.cljc", :end-column 14, :method-params ([key mixins]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 2, :fn-var true, :arglists (quote ([key mixins]))}, collect* {:protocol-inline nil, :meta {:file "/Users/nostowe/personal/rubygeek/clojure/try-devcards-rum/resources/public/js/compiled/devcards_out/rum/util.cljc", :line 9, :column 7, :end-line 9, :end-column 15, :arglists (quote ([keys mixins]))}, :name rum.util/collect*, :variadic false, :file "resources/public/js/compiled/devcards_out/rum/util.cljc", :end-column 15, :method-params ([keys mixins]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 2, :fn-var true, :arglists (quote ([keys mixins]))}, call-all {:protocol-inline nil, :meta {:file "/Users/nostowe/personal/rubygeek/clojure/try-devcards-rum/resources/public/js/compiled/devcards_out/rum/util.cljc", :line 14, :column 7, :end-line 14, :end-column 15, :arglists (quote ([state fns & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(state fns args)], :arglists ([state fns & args]), :arglists-meta (nil)}}, :name rum.util/call-all, :variadic true, :file "resources/public/js/compiled/devcards_out/rum/util.cljc", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(state fns args)], :arglists ([state fns & args]), :arglists-meta (nil)}, :method-params [(state fns args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists ([state fns & args])}}, :require-macros nil, :doc nil}