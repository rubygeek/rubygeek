{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name rum.derived-atom, :imports nil, :requires nil, :uses nil, :defs {derived-atom {:protocol-inline nil, :meta {:file "/Users/nolastowe/code/practice/rubygeek/clojure/try-devcards-rum/resources/public/js/compiled/devcards_out/rum/derived_atom.cljc", :line 4, :column 7, :end-line 4, :end-column 19, :arglists (quote ([refs key f] [refs key f opts])), :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([refs key f] [refs key f opts]), :arglists ([refs key f] [refs key f opts]), :arglists-meta (nil nil)}}, :name rum.derived-atom/derived-atom, :variadic false, :file "resources/public/js/compiled/devcards_out/rum/derived_atom.cljc", :end-column 19, :top-fn {:variadic false, :max-fixed-arity 4, :method-params ([refs key f] [refs key f opts]), :arglists ([refs key f] [refs key f opts]), :arglists-meta (nil nil)}, :method-params ([refs key f] [refs key f opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 4, :end-line 4, :max-fixed-arity 4, :fn-var true, :arglists ([refs key f] [refs key f opts])}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:ref :check-equals?}, :order [:ref :check-equals?]}, :doc nil}