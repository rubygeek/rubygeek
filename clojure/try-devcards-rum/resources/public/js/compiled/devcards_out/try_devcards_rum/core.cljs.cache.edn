{:rename-macros {}, :renames {}, :use-macros {testing cljs.test, is cljs.test, deftest devcards.core, defcard devcards.core}, :excludes #{}, :name try-devcards-rum.core, :imports nil, :requires {rum rum.core, rum.core rum.core, cljs.reader cljs.reader, cljs.test cljs.test}, :uses nil, :defs {label {:name try-devcards-rum.core/label, :file "/Users/nostowe/personal/rubygeek/clojure/try-devcards-rum/src/try_devcards_rum/core.cljs", :line 15, :column 1, :end-line 15, :end-column 16, :arglists (quote ([text])), :meta {:file "/Users/nostowe/personal/rubygeek/clojure/try-devcards-rum/src/try_devcards_rum/core.cljs", :line 15, :column 11, :end-line 15, :end-column 16, :arglists (quote ([text]))}}, counter-atom {:name try-devcards-rum.core/counter-atom, :file "/Users/nostowe/personal/rubygeek/clojure/try-devcards-rum/src/try_devcards_rum/core.cljs", :line 24, :column 1, :end-line 24, :end-column 18, :meta {:file "/Users/nostowe/personal/rubygeek/clojure/try-devcards-rum/src/try_devcards_rum/core.cljs", :line 24, :column 6, :end-line 24, :end-column 18}}, counter {:name try-devcards-rum.core/counter, :file "/Users/nostowe/personal/rubygeek/clojure/try-devcards-rum/src/try_devcards_rum/core.cljs", :line 26, :column 1, :end-line 26, :end-column 18, :arglists (quote ([])), :meta {:file "/Users/nostowe/personal/rubygeek/clojure/try-devcards-rum/src/try_devcards_rum/core.cljs", :line 26, :column 11, :end-line 26, :end-column 18, :arglists (quote ([]))}}, format-name {:protocol-inline nil, :meta {:file "/Users/nostowe/personal/rubygeek/clojure/try-devcards-rum/src/try_devcards_rum/core.cljs", :line 36, :column 7, :end-line 36, :end-column 18, :arglists (quote ([first-name] [first-name last-name])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([first-name] [first-name last-name]), :arglists ([first-name] [first-name last-name]), :arglists-meta (nil nil)}}, :name try-devcards-rum.core/format-name, :variadic false, :file "/Users/nostowe/personal/rubygeek/clojure/try-devcards-rum/src/try_devcards_rum/core.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([first-name] [first-name last-name]), :arglists ([first-name] [first-name last-name]), :arglists-meta (nil nil)}, :method-params ([first-name] [first-name last-name]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 2, :fn-var true, :arglists ([first-name] [first-name last-name])}, my-name-test {:protocol-inline nil, :meta {:file "/Users/nostowe/personal/rubygeek/clojure/try-devcards-rum/src/try_devcards_rum/core.cljs", :line 41, :column 10, :end-line 41, :end-column 22}, :name try-devcards-rum.core/my-name-test, :variadic false, :file "/Users/nostowe/personal/rubygeek/clojure/try-devcards-rum/src/try_devcards_rum/core.cljs", :end-column 22, :method-params ([]), :protocol-impl nil, :arglists-meta (), :column 1, :line 41, :end-line 41, :max-fixed-arity 0, :fn-var true, :arglists nil, :test true}}, :require-macros {cljs.test cljs.test, dc devcards.core, devcards.core devcards.core, rum rum.core, rum.core rum.core}, :cljs.analyzer/constants {:seen #{:path try-devcards-rum.core/my-name-test = :testing-contexts format-name try-devcards-rum.core :func :ns :try_devcards_rum.core :name :my-name-test :rum-card-counter :file :end-column :type :running-tests :documentation :column my-name-test :main-obj :fail :line not :initial-data :expected :end-line :error :options :pass :arglists :actual :doc :test :message :rum-card}, :order [:path :func :try_devcards_rum.core :rum-card :name :documentation :main-obj :initial-data :options :rum-card-counter :my-name-test :testing-contexts :type :expected :actual :message :error = format-name :pass :fail not try-devcards-rum.core/my-name-test :ns :file :end-column :column :line :end-line :arglists :doc :test try-devcards-rum.core my-name-test :running-tests]}, :doc nil}