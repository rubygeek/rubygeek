{"version":3,"file":"testing.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser-dynamic/testing.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAsD,6CAA6C,EAAC,MAAM,mBAAmB;OAC7H,EAAC,8BAA8B,EAAE,0BAA0B,EAAC,MAAM,2BAA2B;OAC7F,EAAC,gBAAgB,EAA6B,QAAQ,EAAmE,qBAAqB,EAAC,MAAM,eAAe;OACpK,EAAC,OAAO,EAAE,oBAAoB,EAAE,qBAAqB,EAAC,MAAM,uBAAuB;OACnF,EAAC,oBAAoB,EAAyB,MAAM,mCAAmC;OAEvF,EAAC,OAAO,EAAC,MAAM,gBAAgB;OAC/B,EAAC,2CAA2C,EAAC,MAAM,0BAA0B;OAC7E,EAAC,wBAAwB,EAAC,MAAM,uCAAuC;AAE9E,cAAc,0BAA0B,CAAA;AAExC;;GAEG;AACH,OAAO,MAAM,6BAA6B,GAAG,qBAAqB,CAC9D,0BAA0B,EAAE,uBAAuB,EACnD,2CAA2C,CAAC,CAAC;AACjD;AAWA,CAAC;AAVD,kBAAkB;AACX,sCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;gBACvB,OAAO,EAAE,CAAC,oBAAoB,CAAC;gBAC/B,SAAS,EAAE;oBACT,EAAC,OAAO,EAAE,oBAAoB,EAAE,QAAQ,EAAE,8BAA8B,EAAC;oBACzE,EAAC,OAAO,EAAE,qBAAqB,EAAE,QAAQ,EAAE,wBAAwB,EAAC;iBACrE;aACF,EAAG,EAAE;CACL,CACA;AAED;;GAEG;AACH,OAAO,MAAM,uCAAuC;AAChD,+EAA+E;AAC/E,iCAAiC;AACjC,CAAC,CAAC,YAAmB;QACnB,MAAM,uBAAuB,GAAG,6CAA6C,CAAC,YAAY,CAAC,CAAC;QAC5F,MAAM,WAAW,GACb,qBAAqB,CAAC,6BAA6B,EAAE,iCAAiC,EAAE,CAAC;gBACjE,OAAO,EAAE,gBAAgB;gBACzB,QAAQ,EAAE,uBAAuB,CAAC,eAAe;gBACjD,KAAK,EAAE,IAAI;aACZ,CAAC,CAAC,EAAE,CAAC;QAChC;QAQN,CAAC;QAPK,kBAAkB;QACjB,4BAAU,GAA0B;YAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;wBACjB,OAAO,EAAE,CAAC,2BAA2B,CAAC;wBACtC,YAAY,EAAE,CAAC,uBAAuB,CAAC,kBAAkB,CAAC;qBAC3D,EAAG,EAAE;SACX,CACA;QAEK,MAAM,YAAY,GAAG,OAAO,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;QACjF,MAAM,OAAO,GAAY,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACnD,uBAAuB,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,GAAG,KAAK,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAClF,CAAC,CAAC,CAAC;AAEP;;GAEG;AACH,OAAO,MAAM,0CAA0C,GACnD,EAAE,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompilerConfig, DirectiveResolver, NgModuleResolver, analyzeAppProvidersForDeprecatedConfiguration} from '@angular/compiler';\nimport {OverridingTestComponentBuilder, platformCoreDynamicTesting} from '@angular/compiler/testing';\nimport {COMPILER_OPTIONS, Compiler, CompilerFactory, NgModule, PlatformRef, Provider, ReflectiveInjector, Type, createPlatform, createPlatformFactory} from '@angular/core';\nimport {TestBed, TestComponentBuilder, TestComponentRenderer} from '@angular/core/testing';\nimport {BrowserTestingModule, platformBrowserTesting} from '@angular/platform-browser/testing';\n\nimport {Console} from './core_private';\nimport {INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS} from './src/platform_providers';\nimport {DOMTestComponentRenderer} from './testing/dom_test_component_renderer';\n\nexport * from './private_export_testing'\n\n/**\n * @experimental API related to bootstrapping are still under review.\n */\nexport const platformBrowserDynamicTesting = createPlatformFactory(\n    platformCoreDynamicTesting, 'browserDynamicTesting',\n    INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\nexport class BrowserDynamicTestingModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [BrowserTestingModule],\n  providers: [\n    {provide: TestComponentBuilder, useClass: OverridingTestComponentBuilder},\n    {provide: TestComponentRenderer, useClass: DOMTestComponentRenderer},\n  ]\n}, ] },\n];\n}\n\n/**\n * @deprecated Use initTestEnvironment with platformBrowserDynamicTesting instead.\n */\nexport const TEST_BROWSER_DYNAMIC_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    // Note: This is not a real provider but a hack to still support the deprecated\n    // `setBaseTestProviders` method!\n    [(appProviders: any[]) => {\n      const deprecatedConfiguration = analyzeAppProvidersForDeprecatedConfiguration(appProviders);\n      const platformRef =\n          createPlatformFactory(platformBrowserDynamicTesting, 'browserDynamicTestingDeprecated', [{\n                                  provide: COMPILER_OPTIONS,\n                                  useValue: deprecatedConfiguration.compilerOptions,\n                                  multi: true\n                                }])();\n      class DynamicTestModule {\n      /** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n        exports: [BrowserDynamicTestingModule],\n        declarations: [deprecatedConfiguration.moduleDeclarations]\n      }, ] },\n];\n}\n\n      const testInjector = TestBed.initTestEnvironment(DynamicTestModule, platformRef);\n      const console: Console = testInjector.get(Console);\n      deprecatedConfiguration.deprecationMessages.forEach((msg) => console.warn(msg));\n    }];\n\n/**\n * @deprecated Use initTestEnvironment with BrowserDynamicTestingModule instead.\n */\nexport const TEST_BROWSER_DYNAMIC_APPLICATION_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    [];\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}