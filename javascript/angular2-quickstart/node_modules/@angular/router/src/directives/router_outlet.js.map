{"version":3,"file":"router_outlet.js","sourceRoot":"","sources":["../../../../../modules/@angular/router/src/directives/router_outlet.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Attribute, ComponentFactory, ComponentFactoryResolver, ComponentRef, Directive, EventEmitter, Injector, NoComponentFactoryError, OnDestroy, Output, ReflectiveInjector, ResolvedReflectiveProvider, ViewContainerRef} from '@angular/core';\n\nimport {RouterOutletMap} from '../router_outlet_map';\nimport {ActivatedRoute} from '../router_state';\nimport {PRIMARY_OUTLET} from '../shared';\nexport class RouterOutlet implements OnDestroy {\n  private activated: ComponentRef<any>;\n  private _activatedRoute: ActivatedRoute;\n  public outletMap: RouterOutletMap; activateEvents = new EventEmitter<any>(); deactivateEvents = new EventEmitter<any>();\n\n  constructor(\n      private parentOutletMap: RouterOutletMap, private location: ViewContainerRef,\n      private resolver: ComponentFactoryResolver, private name: string) {\n    parentOutletMap.registerOutlet(name ? name : PRIMARY_OUTLET, this);\n  }\n\n  ngOnDestroy(): void { this.parentOutletMap.removeOutlet(this.name ? this.name : PRIMARY_OUTLET); }\n\n  get isActivated(): boolean { return !!this.activated; }\n  get component(): Object {\n    if (!this.activated) throw new Error('Outlet is not activated');\n    return this.activated.instance;\n  }\n  get activatedRoute(): ActivatedRoute {\n    if (!this.activated) throw new Error('Outlet is not activated');\n    return this._activatedRoute;\n  }\n\n  deactivate(): void {\n    if (this.activated) {\n      const c = this.component;\n      this.activated.destroy();\n      this.activated = null;\n      this.deactivateEvents.emit(c);\n    }\n  }\n\n  activate(\n      activatedRoute: ActivatedRoute, loadedResolver: ComponentFactoryResolver,\n      loadedInjector: Injector, providers: ResolvedReflectiveProvider[],\n      outletMap: RouterOutletMap): void {\n    this.outletMap = outletMap;\n    this._activatedRoute = activatedRoute;\n\n    const snapshot = activatedRoute._futureSnapshot;\n    const component: any = <any>snapshot._routeConfig.component;\n\n    let factory: ComponentFactory<any>;\n    try {\n      if (typeof component === 'string') {\n        factory = snapshot._resolvedComponentFactory;\n      } else if (loadedResolver) {\n        factory = loadedResolver.resolveComponentFactory(component);\n      } else {\n        factory = this.resolver.resolveComponentFactory(component);\n      }\n    } catch (e) {\n      if (!(e instanceof NoComponentFactoryError)) throw e;\n      const componentName = component ? component.name : null;\n      console.warn(\n          `'${componentName}' not found in entryComponents array.  To ensure all components referred\n          to by the Routes are compiled, you must add '${componentName}' to the\n          'entryComponents' array of your application component. This will be required in a future\n          release of the router.`);\n      factory = snapshot._resolvedComponentFactory;\n    }\n\n    const injector = loadedInjector ? loadedInjector : this.location.parentInjector;\n\n    const inj = ReflectiveInjector.fromResolvedProviders(providers, injector);\n    this.activated = this.location.createComponent(factory, this.location.length, inj, []);\n    this.activated.changeDetectorRef.detectChanges();\n\n    this.activateEvents.emit(this.activated.instance);\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: 'router-outlet'}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: RouterOutletMap, },\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n{type: undefined, decorators: [{ type: Attribute, args: ['name', ] }, ]},\n];\n/** @nocollapse */\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'activateEvents': [{ type: Output, args: ['activate', ] },],\n'deactivateEvents': [{ type: Output, args: ['deactivate', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}