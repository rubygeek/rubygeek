{"version":3,"file":"router_testing_module.js","sourceRoot":"","sources":["../../../../modules/@angular/router/testing/router_testing_module.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,uBAAyC,iBAAiB,CAAC,CAAA;AAC3D,wBAAgD,yBAAyB,CAAC,CAAA;AAC1E,qBAAkH,eAAe,CAAC,CAAA;AAElI,sBAA4D,UAAU,CAAC,CAAA;AACvE,qCAAqB,6BAA6B,CAAC,CAAA;AACnD,8BAA6C,sBAAsB,CAAC,CAAA;AACpE,2BAAsB,yBAAyB,CAAC,CAAA;AAChD;IAGE,kCAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;QAF/B,mBAAc,GAA0B,EAAE,CAAC;IAET,CAAC;IAE1C,uCAAI,GAAJ,UAAK,IAAY;QACf,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;QACrE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAM,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,wBAAsB,IAAM,CAAC,CAAC,CAAC;QACtE,CAAC;IACH,CAAC;IACH,kBAAkB;IACX,mCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,uCAAc,GAA2D;QAChF,EAAC,IAAI,EAAE,eAAQ,GAAG;KACjB,CAAC;IACF,+BAAC;AAAD,CAAC,AApBD,IAoBC;AApBY,gCAAwB,2BAoBpC,CAAA;AAED,4BACI,QAA2B,EAAE,aAA4B,EAAE,SAA0B,EACrF,QAAkB,EAAE,MAA6B,EAAE,QAAkB,EAAE,MAAiB;IAC1F,MAAM,CAAC,IAAI,cAAM,CACb,IAAI,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,oBAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AAC7F,CAAC;AACD;IAAA;IAqBA,CAAC;IApBD,kBAAkB;IACX,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,eAAQ,EAAE,IAAI,EAAE,CAAC;oBACvB,OAAO,EAAE,CAAC,4BAAY,CAAC;oBACvB,SAAS,EAAE;wBACT,gCAAgB;wBAChB,EAAC,OAAO,EAAE,iBAAQ,EAAE,QAAQ,EAAE,qBAAW,EAAC;wBAC1C,EAAC,OAAO,EAAE,yBAAgB,EAAE,QAAQ,EAAE,8BAAoB,EAAC;wBAC3D,EAAC,OAAO,EAAE,4BAAqB,EAAE,QAAQ,EAAE,wBAAwB,EAAC;wBACpE;4BACE,OAAO,EAAE,cAAM;4BACf,UAAU,EAAE,kBAAkB;4BAC9B,IAAI,EAAE;gCACJ,wBAAiB,EAAE,qBAAa,EAAE,uBAAe,EAAE,iBAAQ,EAAE,4BAAqB;gCAClF,eAAQ,EAAE,6BAAM;6BACjB;yBACF;qBACF;iBACF,EAAG,EAAE;KACL,CAAC;IACF,0BAAC;AAAD,CAAC,AArBD,IAqBC;AArBY,2BAAmB,sBAqB/B,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Location, LocationStrategy} from '@angular/common';\nimport {MockLocationStrategy, SpyLocation} from '@angular/common/testing';\nimport {Compiler, ComponentResolver, Injectable, Injector, NgModule, NgModuleFactory, NgModuleFactoryLoader} from '@angular/core';\n\nimport {Route, Router, RouterOutletMap, UrlSerializer} from '../index';\nimport {ROUTES} from '../src/router_config_loader';\nimport {ROUTER_PROVIDERS, RouterModule} from '../src/router_module';\nimport {flatten} from '../src/utils/collection';\nexport class SpyNgModuleFactoryLoader implements NgModuleFactoryLoader {\n  public stubbedModules: {[path: string]: any} = {};\n\n  constructor(private compiler: Compiler) {}\n\n  load(path: string): Promise<NgModuleFactory<any>> {\n    if (this.stubbedModules[path]) {\n      return this.compiler.compileModuleAsync(this.stubbedModules[path]);\n    } else {\n      return <any>Promise.reject(new Error(`Cannot find module ${path}`));\n    }\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Compiler, },\n];\n}\n\nfunction setupTestingRouter(\n    resolver: ComponentResolver, urlSerializer: UrlSerializer, outletMap: RouterOutletMap,\n    location: Location, loader: NgModuleFactoryLoader, injector: Injector, routes: Route[][]) {\n  return new Router(\n      null, resolver, urlSerializer, outletMap, location, injector, loader, flatten(routes));\n}\nexport class RouterTestingModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  exports: [RouterModule],\n  providers: [\n    ROUTER_PROVIDERS,\n    {provide: Location, useClass: SpyLocation},\n    {provide: LocationStrategy, useClass: MockLocationStrategy},\n    {provide: NgModuleFactoryLoader, useClass: SpyNgModuleFactoryLoader},\n    {\n      provide: Router,\n      useFactory: setupTestingRouter,\n      deps: [\n        ComponentResolver, UrlSerializer, RouterOutletMap, Location, NgModuleFactoryLoader,\n        Injector, ROUTES\n      ]\n    },\n  ]\n}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}