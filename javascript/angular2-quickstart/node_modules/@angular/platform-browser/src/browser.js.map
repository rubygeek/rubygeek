{"version":3,"file":"browser.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser/src/browser.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, PlatformLocation} from '@angular/common';\nimport {ApplicationModule, ExceptionHandler, NgModule, NgModuleFactory, NgModuleRef, NgZone, OpaqueToken, PLATFORM_COMMON_PROVIDERS, PLATFORM_INITIALIZER, PlatformRef, ReflectiveInjector, RootRenderer, SanitizationService, Testability, assertPlatform, createPlatform, createPlatformFactory, getPlatform, isDevMode, platformCore} from '@angular/core';\n\nimport {wtfInit} from '../core_private';\nimport {AnimationDriver} from '../src/dom/animation_driver';\nimport {WebAnimationsDriver} from '../src/dom/web_animations_driver';\n\nimport {BrowserDomAdapter} from './browser/browser_adapter';\nimport {BrowserPlatformLocation} from './browser/location/browser_platform_location';\nimport {BrowserGetTestability} from './browser/testability';\nimport {ELEMENT_PROBE_PROVIDERS} from './dom/debug/ng_probe';\nimport {getDOM} from './dom/dom_adapter';\nimport {DomRootRenderer, DomRootRenderer_} from './dom/dom_renderer';\nimport {DOCUMENT} from './dom/dom_tokens';\nimport {DomEventsPlugin} from './dom/events/dom_events';\nimport {EVENT_MANAGER_PLUGINS, EventManager} from './dom/events/event_manager';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig, HammerGesturesPlugin} from './dom/events/hammer_gestures';\nimport {KeyEventsPlugin} from './dom/events/key_events';\nimport {DomSharedStylesHost, SharedStylesHost} from './dom/shared_styles_host';\nimport {isBlank} from './facade/lang';\nimport {DomSanitizationService, DomSanitizationServiceImpl} from './security/dom_sanitization_service';\n\nexport const INTERNAL_BROWSER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [\n  {provide: PLATFORM_INITIALIZER, useValue: initDomAdapter, multi: true},\n  {provide: PlatformLocation, useClass: BrowserPlatformLocation}\n];\n\n/**\n * A set of providers to initialize the Angular platform in a web browser.\n *\n * Used automatically by `bootstrap`, or can be passed to `platform`.\n *\n * @deprecated Use `platformBrowser()` or create a custom platform factory via\n * `createPlatformFactory(platformBrowser, ...)`\n */\nexport const BROWSER_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    [PLATFORM_COMMON_PROVIDERS, INTERNAL_BROWSER_PLATFORM_PROVIDERS];\n\n/**\n * @security Replacing built-in sanitization providers exposes the application to XSS risks.\n * Attacker-controlled data introduced by an unsanitized provider could expose your\n * application to XSS risks. For more detail, see the [Security Guide](http://g.co/ng/security).\n * @experimental\n */\nexport const BROWSER_SANITIZATION_PROVIDERS: Array<any> = [\n  {provide: SanitizationService, useExisting: DomSanitizationService},\n  {provide: DomSanitizationService, useClass: DomSanitizationServiceImpl},\n];\n\n/**\n * A set of providers to initialize an Angular application in a web browser.\n *\n * Used automatically by `bootstrap`, or can be passed to {@link PlatformRef\n * PlatformRef.application}.\n *\n * @deprecated Create a module that includes `BrowserModule` instead. This is empty for backwards\n * compatibility,\n * as all of our bootstrap methods add a module implicitly, i.e. keeping this filled would add the\n * providers 2x.\n */\nexport const BROWSER_APP_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [];\n\n/**\n * @experimental API related to bootstrapping are still under review.\n */\nexport const platformBrowser =\n    createPlatformFactory(platformCore, 'browser', INTERNAL_BROWSER_PLATFORM_PROVIDERS);\n\n/**\n * @deprecated Use {@link platformBrowser} instead\n */\nexport const browserPlatform = platformBrowser;\n\nexport function initDomAdapter() {\n  BrowserDomAdapter.makeCurrent();\n  wtfInit();\n  BrowserGetTestability.init();\n}\n\nexport function _exceptionHandler(): ExceptionHandler {\n  return new ExceptionHandler(getDOM());\n}\n\nexport function _document(): any {\n  return getDOM().defaultDoc();\n}\n\nexport function _resolveDefaultAnimationDriver(): AnimationDriver {\n  if (getDOM().supportsWebAnimation()) {\n    return new WebAnimationsDriver();\n  }\n  return AnimationDriver.NOOP;\n}\nexport class BrowserModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    BROWSER_SANITIZATION_PROVIDERS,\n    {provide: ExceptionHandler, useFactory: _exceptionHandler, deps: []},\n    {provide: DOCUMENT, useFactory: _document, deps: []},\n    {provide: EVENT_MANAGER_PLUGINS, useClass: DomEventsPlugin, multi: true},\n    {provide: EVENT_MANAGER_PLUGINS, useClass: KeyEventsPlugin, multi: true},\n    {provide: EVENT_MANAGER_PLUGINS, useClass: HammerGesturesPlugin, multi: true},\n    {provide: HAMMER_GESTURE_CONFIG, useClass: HammerGestureConfig},\n    {provide: DomRootRenderer, useClass: DomRootRenderer_},\n    {provide: RootRenderer, useExisting: DomRootRenderer},\n    {provide: SharedStylesHost, useExisting: DomSharedStylesHost},\n    {provide: AnimationDriver, useFactory: _resolveDefaultAnimationDriver}, DomSharedStylesHost,\n    Testability, EventManager, ELEMENT_PROBE_PROVIDERS\n  ],\n  exports: [CommonModule, ApplicationModule]\n}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}