{"version":3,"file":"worker_app.js","sourceRoot":"","sources":["../../../../modules/@angular/platform-browser/src/worker_app.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CommonModule, FORM_PROVIDERS} from '@angular/common';\nimport {APP_INITIALIZER, ApplicationModule, ExceptionHandler, NgModule, NgZone, OpaqueToken, PLATFORM_COMMON_PROVIDERS, PlatformRef, ReflectiveInjector, RootRenderer, assertPlatform, createPlatform, createPlatformFactory, getPlatform, platformCore} from '@angular/core';\n\nimport {BROWSER_SANITIZATION_PROVIDERS} from './browser';\nimport {isBlank, print} from './facade/lang';\nimport {ON_WEB_WORKER} from './web_workers/shared/api';\nimport {ClientMessageBrokerFactory, ClientMessageBrokerFactory_} from './web_workers/shared/client_message_broker';\nimport {MessageBus} from './web_workers/shared/message_bus';\nimport {PostMessageBus, PostMessageBusSink, PostMessageBusSource} from './web_workers/shared/post_message_bus';\nimport {RenderStore} from './web_workers/shared/render_store';\nimport {Serializer} from './web_workers/shared/serializer';\nimport {ServiceMessageBrokerFactory, ServiceMessageBrokerFactory_} from './web_workers/shared/service_message_broker';\nimport {WebWorkerRootRenderer} from './web_workers/worker/renderer';\nimport {WorkerDomAdapter} from './web_workers/worker/worker_adapter';\n\nclass PrintLogger {\n  log = print;\n  logError = print;\n  logGroup = print;\n  logGroupEnd() {}\n}\n\n/**\n * @deprecated Use `platformWorkerApp()` or create a custom platform factory via\n * `createPlatformFactory(platformWorkerApp, ...)`\n */\nexport const WORKER_APP_PLATFORM_PROVIDERS: Array<any /*Type | Provider | any[]*/> =\n    PLATFORM_COMMON_PROVIDERS;\n\n/**\n * @deprecated Create a module that includes `WorkerAppModule` instead. This is empty for backwards\n * compatibility,\n * as all of our bootstrap methods add a module implicitly, i.e. keeping this filled would add the\n * providers 2x.\n */\nexport const WORKER_APP_APPLICATION_PROVIDERS: Array<any /*Type | Provider | any[]*/> = [];\n\n/**\n * @experimental\n */\nexport const platformWorkerApp = createPlatformFactory(platformCore, 'workerApp');\n\n/**\n * @deprecated Use {@link platformWorkerApp} instead\n */\nexport const workerAppPlatform = platformWorkerApp;\n\nfunction _exceptionHandler(): ExceptionHandler {\n  return new ExceptionHandler(new PrintLogger());\n}\n\n// TODO(jteplitz602) remove this and compile with lib.webworker.d.ts (#3492)\nlet _postMessage = {\n  postMessage: (message: any, transferrables?: [ArrayBuffer]) => {\n    (<any>postMessage)(message, transferrables);\n  }\n};\n\nfunction createMessageBus(zone: NgZone): MessageBus {\n  let sink = new PostMessageBusSink(_postMessage);\n  let source = new PostMessageBusSource();\n  let bus = new PostMessageBus(sink, source);\n  bus.attachToZone(zone);\n  return bus;\n}\n\nfunction setupWebWorker(): void {\n  WorkerDomAdapter.makeCurrent();\n}\nexport class WorkerAppModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    FORM_PROVIDERS, BROWSER_SANITIZATION_PROVIDERS, Serializer,\n    {provide: ClientMessageBrokerFactory, useClass: ClientMessageBrokerFactory_},\n    {provide: ServiceMessageBrokerFactory, useClass: ServiceMessageBrokerFactory_},\n    WebWorkerRootRenderer, {provide: RootRenderer, useExisting: WebWorkerRootRenderer},\n    {provide: ON_WEB_WORKER, useValue: true}, RenderStore,\n    {provide: ExceptionHandler, useFactory: _exceptionHandler, deps: []},\n    {provide: MessageBus, useFactory: createMessageBus, deps: [NgZone]},\n    {provide: APP_INITIALIZER, useValue: setupWebWorker, multi: true}\n  ],\n  exports: [CommonModule, ApplicationModule]\n}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}