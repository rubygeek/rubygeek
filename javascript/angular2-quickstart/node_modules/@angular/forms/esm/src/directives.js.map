{"version":3,"file":"directives.js","sourceRoot":"","sources":["../../../../../modules/@angular/forms/src/directives.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,QAAQ,EAAO,MAAM,eAAe;OAErC,EAAC,4BAA4B,EAAC,MAAM,sCAAsC;OAC1E,EAAC,oBAAoB,EAAC,MAAM,qCAAqC;OACjE,EAAC,eAAe,EAAC,MAAM,gCAAgC;OACvD,EAAC,MAAM,EAAC,MAAM,sBAAsB;OACpC,EAAC,OAAO,EAAC,MAAM,uBAAuB;OACtC,EAAC,YAAY,EAAC,MAAM,6BAA6B;OACjD,EAAC,mBAAmB,EAAC,MAAM,oCAAoC;OAC/D,EAAC,yBAAyB,EAAC,MAAM,2CAA2C;OAC5E,EAAC,oBAAoB,EAAC,MAAM,yDAAyD;OACrF,EAAC,eAAe,EAAC,MAAM,oDAAoD;OAC3E,EAAC,kBAAkB,EAAC,MAAM,uDAAuD;OACjF,EAAC,aAAa,EAAE,aAAa,EAAC,MAAM,kDAAkD;OACtF,EAAC,cAAc,EAAE,0BAA0B,EAAC,MAAM,4CAA4C;OAC9F,EAAC,sBAAsB,EAAE,kCAAkC,EAAC,MAAM,qDAAqD;OACvH,EAAC,kBAAkB,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,iBAAiB,EAAC,MAAM,yBAAyB;AAEnH,SAAQ,4BAA4B,QAAO,sCAAsC,CAAC;AAElF,SAAQ,oBAAoB,QAAO,qCAAqC,CAAC;AACzE,SAAQ,SAAS,QAAO,yBAAyB,CAAC;AAClD,SAAQ,eAAe,QAAO,gCAAgC,CAAC;AAC/D,SAAQ,MAAM,QAAO,sBAAsB,CAAC;AAC5C,SAAQ,OAAO,QAAO,uBAAuB,CAAC;AAC9C,SAAQ,YAAY,QAAO,6BAA6B,CAAC;AACzD,SAAQ,mBAAmB,QAAO,oCAAoC,CAAC;AACvE,SAAQ,yBAAyB,QAAO,2CAA2C,CAAC;AACpF,SAAQ,oBAAoB,QAAO,yDAAyD,CAAC;AAC7F,SAAQ,eAAe,QAAO,oDAAoD,CAAC;AACnF,SAAQ,kBAAkB,QAAO,uDAAuD,CAAC;AACzF,SAAQ,aAAa,EAAE,aAAa,QAAO,kDAAkD,CAAC;AAC9F,SAAQ,cAAc,EAAE,0BAA0B,QAAO,4CAA4C,CAAC;AACtG,SAAQ,sBAAsB,EAAE,kCAAkC,QAAO,qDAAqD,CAAC;AAC/H,SAAQ,kBAAkB,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,iBAAiB,QAAO,yBAAyB,CAAC;AAEpH,OAAO,MAAM,sBAAsB,GAAW;IAC5C,cAAc,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,mBAAmB;IACjF,4BAA4B,EAAE,0BAA0B,EAAE,kCAAkC;IAC5F,yBAAyB,EAAE,eAAe,EAAE,iBAAiB,EAAE,kBAAkB;IACjF,kBAAkB,EAAE,gBAAgB;CACrC,CAAC;AAEF,OAAO,MAAM,0BAA0B,GAAW,CAAC,OAAO,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;AAElF,OAAO,MAAM,0BAA0B,GACnC,CAAC,oBAAoB,EAAE,kBAAkB,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;AAE9F;;;;;;;;;;;;;;;;GAgBG;AACH,OAAO,MAAM,eAAe,GAAa,CAAC,0BAA0B,EAAE,sBAAsB,CAAC,CAAC;AAE9F;;GAEG;AAEH,OAAO,MAAM,wBAAwB,GACjC,CAAC,0BAA0B,EAAE,sBAAsB,CAAC,CAAC;AACzD;AAKA,CAAC;AAJD,kBAAkB;AACX,oCAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAAC,YAAY,EAAE,sBAAsB,EAAE,OAAO,EAAE,sBAAsB,EAAC,EAAG,EAAE;CACpG,CACA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule, Type} from '@angular/core';\n\nimport {CheckboxControlValueAccessor} from './directives/checkbox_value_accessor';\nimport {DefaultValueAccessor} from './directives/default_value_accessor';\nimport {NgControlStatus} from './directives/ng_control_status';\nimport {NgForm} from './directives/ng_form';\nimport {NgModel} from './directives/ng_model';\nimport {NgModelGroup} from './directives/ng_model_group';\nimport {NumberValueAccessor} from './directives/number_value_accessor';\nimport {RadioControlValueAccessor} from './directives/radio_control_value_accessor';\nimport {FormControlDirective} from './directives/reactive_directives/form_control_directive';\nimport {FormControlName} from './directives/reactive_directives/form_control_name';\nimport {FormGroupDirective} from './directives/reactive_directives/form_group_directive';\nimport {FormArrayName, FormGroupName} from './directives/reactive_directives/form_group_name';\nimport {NgSelectOption, SelectControlValueAccessor} from './directives/select_control_value_accessor';\nimport {NgSelectMultipleOption, SelectMultipleControlValueAccessor} from './directives/select_multiple_control_value_accessor';\nimport {MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator} from './directives/validators';\n\nexport {CheckboxControlValueAccessor} from './directives/checkbox_value_accessor';\nexport {ControlValueAccessor} from './directives/control_value_accessor';\nexport {DefaultValueAccessor} from './directives/default_value_accessor';\nexport {NgControl} from './directives/ng_control';\nexport {NgControlStatus} from './directives/ng_control_status';\nexport {NgForm} from './directives/ng_form';\nexport {NgModel} from './directives/ng_model';\nexport {NgModelGroup} from './directives/ng_model_group';\nexport {NumberValueAccessor} from './directives/number_value_accessor';\nexport {RadioControlValueAccessor} from './directives/radio_control_value_accessor';\nexport {FormControlDirective} from './directives/reactive_directives/form_control_directive';\nexport {FormControlName} from './directives/reactive_directives/form_control_name';\nexport {FormGroupDirective} from './directives/reactive_directives/form_group_directive';\nexport {FormArrayName, FormGroupName} from './directives/reactive_directives/form_group_name';\nexport {NgSelectOption, SelectControlValueAccessor} from './directives/select_control_value_accessor';\nexport {NgSelectMultipleOption, SelectMultipleControlValueAccessor} from './directives/select_multiple_control_value_accessor';\nexport {MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator} from './directives/validators';\n\nexport const SHARED_FORM_DIRECTIVES: Type[] = [\n  NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor,\n  CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor,\n  RadioControlValueAccessor, NgControlStatus, RequiredValidator, MinLengthValidator,\n  MaxLengthValidator, PatternValidator\n];\n\nexport const TEMPLATE_DRIVEN_DIRECTIVES: Type[] = [NgModel, NgModelGroup, NgForm];\n\nexport const REACTIVE_DRIVEN_DIRECTIVES: Type[] =\n    [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n\n/**\n *\n * A list of all the form directives used as part of a `@Component` annotation.\n *\n *  This is a shorthand for importing them each individually.\n *\n * ### Example\n *\n * ```typescript\n * @Component({\n *   selector: 'my-app',\n *   directives: [FORM_DIRECTIVES]\n * })\n * class MyApp {}\n * ```\n * @experimental\n */\nexport const FORM_DIRECTIVES: Type[][] = [TEMPLATE_DRIVEN_DIRECTIVES, SHARED_FORM_DIRECTIVES];\n\n/**\n * @experimental\n */\n\nexport const REACTIVE_FORM_DIRECTIVES: Type[][] =\n    [REACTIVE_DRIVEN_DIRECTIVES, SHARED_FORM_DIRECTIVES];\nexport class InternalFormsSharedModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: SHARED_FORM_DIRECTIVES, exports: SHARED_FORM_DIRECTIVES}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}