{"version":3,"file":"directives.js","sourceRoot":"","sources":["../../../../modules/@angular/forms/src/directives.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,qBAA6B,eAAe,CAAC,CAAA;AAE7C,wCAA2C,sCAAsC,CAAC,CAAA;AAClF,uCAAmC,qCAAqC,CAAC,CAAA;AACzE,kCAA8B,gCAAgC,CAAC,CAAA;AAC/D,wBAAqB,sBAAsB,CAAC,CAAA;AAC5C,yBAAsB,uBAAuB,CAAC,CAAA;AAC9C,+BAA2B,6BAA6B,CAAC,CAAA;AACzD,sCAAkC,oCAAoC,CAAC,CAAA;AACvE,6CAAwC,2CAA2C,CAAC,CAAA;AACpF,uCAAmC,yDAAyD,CAAC,CAAA;AAC7F,kCAA8B,oDAAoD,CAAC,CAAA;AACnF,qCAAiC,uDAAuD,CAAC,CAAA;AACzF,gCAA2C,kDAAkD,CAAC,CAAA;AAC9F,8CAAyD,4CAA4C,CAAC,CAAA;AACtG,uDAAyE,qDAAqD,CAAC,CAAA;AAC/H,2BAA0F,yBAAyB,CAAC,CAAA;AAEpH,wCAA2C,sCAAsC,CAAC;AAA1E,8FAA0E;AAElF,uCAAmC,qCAAqC,CAAC;AAAjE,6EAAiE;AACzE,2BAAwB,yBAAyB,CAAC;AAA1C,2CAA0C;AAClD,kCAA8B,gCAAgC,CAAC;AAAvD,8DAAuD;AAC/D,wBAAqB,sBAAsB,CAAC;AAApC,kCAAoC;AAC5C,yBAAsB,uBAAuB,CAAC;AAAtC,qCAAsC;AAC9C,+BAA2B,6BAA6B,CAAC;AAAjD,qDAAiD;AACzD,sCAAkC,oCAAoC,CAAC;AAA/D,0EAA+D;AACvE,6CAAwC,2CAA2C,CAAC;AAA5E,6FAA4E;AACpF,uCAAmC,yDAAyD,CAAC;AAArF,6EAAqF;AAC7F,kCAA8B,oDAAoD,CAAC;AAA3E,8DAA2E;AACnF,qCAAiC,uDAAuD,CAAC;AAAjF,uEAAiF;AACzF,gCAA2C,kDAAkD,CAAC;AAAtF,wDAAa;AAAE,wDAAuE;AAC9F,8CAAyD,4CAA4C,CAAC;AAA9F,wEAAc;AAAE,gGAA8E;AACtG,uDAAyE,qDAAqD,CAAC;AAAvH,iGAAsB;AAAE,yHAA+F;AAC/H,2BAA0F,yBAAyB,CAAC;AAA5G,6DAAkB;AAAE,6DAAkB;AAAE,yDAAgB;AAAE,2DAAkD;AAEvG,8BAAsB,GAAW;IAC5C,8CAAc,EAAE,+DAAsB,EAAE,6CAAoB,EAAE,2CAAmB;IACjF,sDAA4B,EAAE,0DAA0B,EAAE,2EAAkC;IAC5F,wDAAyB,EAAE,mCAAe,EAAE,8BAAiB,EAAE,+BAAkB;IACjF,+BAAkB,EAAE,6BAAgB;CACrC,CAAC;AAEW,kCAA0B,GAAW,CAAC,kBAAO,EAAE,6BAAY,EAAE,gBAAM,CAAC,CAAC;AAErE,kCAA0B,GACnC,CAAC,6CAAoB,EAAE,yCAAkB,EAAE,mCAAe,EAAE,+BAAa,EAAE,+BAAa,CAAC,CAAC;AAE9F;;;;;;;;;;;;;;;;GAgBG;AACU,uBAAe,GAAa,CAAC,kCAA0B,EAAE,8BAAsB,CAAC,CAAC;AAE9F;;GAEG;AAEU,gCAAwB,GACjC,CAAC,kCAA0B,EAAE,8BAAsB,CAAC,CAAC;AACzD;IAAA;IAKA,CAAC;IAJD,kBAAkB;IACX,oCAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,eAAQ,EAAE,IAAI,EAAE,CAAC,EAAC,YAAY,EAAE,8BAAsB,EAAE,OAAO,EAAE,8BAAsB,EAAC,EAAG,EAAE;KACpG,CAAC;IACF,gCAAC;AAAD,CAAC,AALD,IAKC;AALY,iCAAyB,4BAKrC,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule, Type} from '@angular/core';\n\nimport {CheckboxControlValueAccessor} from './directives/checkbox_value_accessor';\nimport {DefaultValueAccessor} from './directives/default_value_accessor';\nimport {NgControlStatus} from './directives/ng_control_status';\nimport {NgForm} from './directives/ng_form';\nimport {NgModel} from './directives/ng_model';\nimport {NgModelGroup} from './directives/ng_model_group';\nimport {NumberValueAccessor} from './directives/number_value_accessor';\nimport {RadioControlValueAccessor} from './directives/radio_control_value_accessor';\nimport {FormControlDirective} from './directives/reactive_directives/form_control_directive';\nimport {FormControlName} from './directives/reactive_directives/form_control_name';\nimport {FormGroupDirective} from './directives/reactive_directives/form_group_directive';\nimport {FormArrayName, FormGroupName} from './directives/reactive_directives/form_group_name';\nimport {NgSelectOption, SelectControlValueAccessor} from './directives/select_control_value_accessor';\nimport {NgSelectMultipleOption, SelectMultipleControlValueAccessor} from './directives/select_multiple_control_value_accessor';\nimport {MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator} from './directives/validators';\n\nexport {CheckboxControlValueAccessor} from './directives/checkbox_value_accessor';\nexport {ControlValueAccessor} from './directives/control_value_accessor';\nexport {DefaultValueAccessor} from './directives/default_value_accessor';\nexport {NgControl} from './directives/ng_control';\nexport {NgControlStatus} from './directives/ng_control_status';\nexport {NgForm} from './directives/ng_form';\nexport {NgModel} from './directives/ng_model';\nexport {NgModelGroup} from './directives/ng_model_group';\nexport {NumberValueAccessor} from './directives/number_value_accessor';\nexport {RadioControlValueAccessor} from './directives/radio_control_value_accessor';\nexport {FormControlDirective} from './directives/reactive_directives/form_control_directive';\nexport {FormControlName} from './directives/reactive_directives/form_control_name';\nexport {FormGroupDirective} from './directives/reactive_directives/form_group_directive';\nexport {FormArrayName, FormGroupName} from './directives/reactive_directives/form_group_name';\nexport {NgSelectOption, SelectControlValueAccessor} from './directives/select_control_value_accessor';\nexport {NgSelectMultipleOption, SelectMultipleControlValueAccessor} from './directives/select_multiple_control_value_accessor';\nexport {MaxLengthValidator, MinLengthValidator, PatternValidator, RequiredValidator} from './directives/validators';\n\nexport const SHARED_FORM_DIRECTIVES: Type[] = [\n  NgSelectOption, NgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor,\n  CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor,\n  RadioControlValueAccessor, NgControlStatus, RequiredValidator, MinLengthValidator,\n  MaxLengthValidator, PatternValidator\n];\n\nexport const TEMPLATE_DRIVEN_DIRECTIVES: Type[] = [NgModel, NgModelGroup, NgForm];\n\nexport const REACTIVE_DRIVEN_DIRECTIVES: Type[] =\n    [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n\n/**\n *\n * A list of all the form directives used as part of a `@Component` annotation.\n *\n *  This is a shorthand for importing them each individually.\n *\n * ### Example\n *\n * ```typescript\n * @Component({\n *   selector: 'my-app',\n *   directives: [FORM_DIRECTIVES]\n * })\n * class MyApp {}\n * ```\n * @experimental\n */\nexport const FORM_DIRECTIVES: Type[][] = [TEMPLATE_DRIVEN_DIRECTIVES, SHARED_FORM_DIRECTIVES];\n\n/**\n * @experimental\n */\n\nexport const REACTIVE_FORM_DIRECTIVES: Type[][] =\n    [REACTIVE_DRIVEN_DIRECTIVES, SHARED_FORM_DIRECTIVES];\nexport class InternalFormsSharedModule {\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{declarations: SHARED_FORM_DIRECTIVES, exports: SHARED_FORM_DIRECTIVES}, ] },\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}