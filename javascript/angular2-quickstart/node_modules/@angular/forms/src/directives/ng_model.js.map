{"version":3,"file":"ng_model.js","sourceRoot":"","sources":["../../../../../modules/@angular/forms/src/directives/ng_model.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Host, Inject, Input, OnChanges, OnDestroy, Optional, Output, Self, SimpleChanges, forwardRef} from '@angular/core';\n\nimport {EventEmitter} from '../facade/async';\nimport {BaseException} from '../facade/exceptions';\nimport {FormControl} from '../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../validators';\n\nimport {AbstractFormGroupDirective} from './abstract_form_group_directive';\nimport {ControlContainer} from './control_container';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from './control_value_accessor';\nimport {NgControl} from './ng_control';\nimport {NgForm} from './ng_form';\nimport {NgModelGroup} from './ng_model_group';\nimport {composeAsyncValidators, composeValidators, controlPath, isPropertyUpdated, selectValueAccessor, setUpControl} from './shared';\nimport {TemplateDrivenErrors} from './template_driven_errors';\nimport {AsyncValidatorFn, ValidatorFn} from './validators';\n\nexport const formControlBinding: any = {\n  provide: NgControl,\n  useExisting: forwardRef(() => NgModel)\n};\n\nconst resolvedPromise = Promise.resolve(null);\nexport class NgModel extends NgControl implements OnChanges,\n    OnDestroy {\n  /** @internal */\n  _control = new FormControl();\n  /** @internal */\n  _registered = false;\n  viewModel: any; model: any; name: string; options: {name?: string, standalone?: boolean}; update = new EventEmitter();\n\n  constructor( private _parent: ControlContainer, private _validators: any[], private _asyncValidators: any[],\n              valueAccessors: ControlValueAccessor[]) {\n                super();\n                this.valueAccessor = selectValueAccessor(this, valueAccessors);\n              }\n\n              ngOnChanges(changes: SimpleChanges) {\n                this._checkForErrors();\n                if (!this._registered) this._setUpControl();\n\n                if (isPropertyUpdated(changes, this.viewModel)) {\n                  this._updateValue(this.model);\n                  this.viewModel = this.model;\n                }\n              }\n\n              ngOnDestroy(): void { this.formDirective && this.formDirective.removeControl(this); }\n\n              get control(): FormControl { return this._control; }\n\n              get path(): string[] {\n                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n              }\n\n              get formDirective(): any { return this._parent ? this._parent.formDirective : null; }\n\n              get validator(): ValidatorFn { return composeValidators(this._validators); }\n\n              get asyncValidator(): AsyncValidatorFn {\n                return composeAsyncValidators(this._asyncValidators);\n              }\n\n              viewToModelUpdate(newValue: any): void {\n                this.viewModel = newValue;\n                this.update.emit(newValue);\n              }\n\n              private _setUpControl(): void {\n                this._isStandalone() ? this._setUpStandalone() :\n                                       this.formDirective.addControl(this);\n                this._registered = true;\n              }\n\n              private _isStandalone(): boolean {\n                return !this._parent || (this.options && this.options.standalone);\n              }\n\n              private _setUpStandalone(): void {\n                setUpControl(this._control, this);\n                this._control.updateValueAndValidity({emitEvent: false});\n              }\n\n              private _checkForErrors(): void {\n                if (!this._isStandalone()) {\n                  this._checkParentType();\n                }\n                this._checkName();\n              }\n\n              private _checkParentType(): void {\n                if (!(this._parent instanceof NgModelGroup) &&\n                    this._parent instanceof AbstractFormGroupDirective) {\n                  TemplateDrivenErrors.formGroupNameException();\n                } else if (\n                    !(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                  TemplateDrivenErrors.modelParentException();\n                }\n              }\n\n              private _checkName(): void {\n                if (this.options && this.options.name) this.name = this.options.name;\n\n                if (!this._isStandalone() && !this.name) {\n                  TemplateDrivenErrors.missingNameException();\n                }\n              }\n\n              private _updateValue(value: any): void {\n                resolvedPromise.then(\n                    () => { this.control.setValue(value, {emitViewToModelChange: false}); });\n              }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[ngModel]:not([formControlName]):not([formControl])',\n  providers: [formControlBinding],\n  exportAs: 'ngModel'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALUE_ACCESSOR, ] }, ]},\n];\n/** @nocollapse */\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'model': [{ type: Input, args: ['ngModel', ] },],\n'name': [{ type: Input },],\n'options': [{ type: Input, args: ['ngModelOptions', ] },],\n'update': [{ type: Output, args: ['ngModelChange', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}