{"version":3,"file":"form_group_name.js","sourceRoot":"","sources":["../../../../../../modules/@angular/forms/src/directives/reactive_directives/form_group_name.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Host, Inject, Input, OnDestroy, OnInit, Optional, Self, SkipSelf, forwardRef} from '@angular/core';\n\nimport {FormArray} from '../../model';\nimport {NG_ASYNC_VALIDATORS, NG_VALIDATORS} from '../../validators';\nimport {AbstractFormGroupDirective} from '../abstract_form_group_directive';\nimport {ControlContainer} from '../control_container';\nimport {ReactiveErrors} from '../reactive_errors';\nimport {composeAsyncValidators, composeValidators, controlPath} from '../shared';\nimport {AsyncValidatorFn, ValidatorFn} from '../validators';\n\nimport {FormGroupDirective} from './form_group_directive';\n\nexport const formGroupNameProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormGroupName)\n};\nexport class FormGroupName extends AbstractFormGroupDirective implements OnInit, OnDestroy { name: string;\n\n  constructor( parent: ControlContainer, validators: any[], asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n    this._validators = validators;\n    this._asyncValidators = asyncValidators;\n  }\n\n  /** @internal */\n  _checkParentType(): void {\n    if (_hasInvalidParent(this._parent)) {\n      ReactiveErrors.groupParentException();\n    }\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formGroupName]', providers: [formGroupNameProvider]}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\n/** @nocollapse */\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['formGroupName', ] },],\n};\n}\n\nexport const formArrayNameProvider: any = {\n  provide: ControlContainer,\n  useExisting: forwardRef(() => FormArrayName)\n};\nexport class FormArrayName extends ControlContainer implements OnInit, OnDestroy {\n  /** @internal */\n  _parent: ControlContainer;\n\n  /** @internal */\n  _validators: any[];\n\n  /** @internal */\n  _asyncValidators: any[]; name: string;\n\n  constructor( parent: ControlContainer, validators: any[], asyncValidators: any[]) {\n    super();\n    this._parent = parent;\n    this._validators = validators;\n    this._asyncValidators = asyncValidators;\n  }\n\n  ngOnInit(): void {\n    this._checkParentType();\n    this.formDirective.addFormArray(this);\n  }\n\n  ngOnDestroy(): void { this.formDirective.removeFormArray(this); }\n\n  get control(): FormArray { return this.formDirective.getFormArray(this); }\n\n  get formDirective(): FormGroupDirective { return <FormGroupDirective>this._parent.formDirective; }\n\n  get path(): string[] { return controlPath(this.name, this._parent); }\n\n  get validator(): ValidatorFn { return composeValidators(this._validators); }\n\n  get asyncValidator(): AsyncValidatorFn { return composeAsyncValidators(this._asyncValidators); }\n\n  private _checkParentType(): void {\n    if (_hasInvalidParent(this._parent)) {\n      ReactiveErrors.arrayParentException();\n    }\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{selector: '[formArrayName]', providers: [formArrayNameProvider]}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: ControlContainer, decorators: [{ type: Optional }, { type: Host }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_VALIDATORS, ] }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Self }, { type: Inject, args: [NG_ASYNC_VALIDATORS, ] }, ]},\n];\n/** @nocollapse */\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'name': [{ type: Input, args: ['formArrayName', ] },],\n};\n}\n\nfunction _hasInvalidParent(parent: ControlContainer): boolean {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n      !(parent instanceof FormArrayName);\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}