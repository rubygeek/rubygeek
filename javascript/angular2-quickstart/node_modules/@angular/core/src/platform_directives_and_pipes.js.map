{"version":3,"file":"platform_directives_and_pipes.js","sourceRoot":"","sources":["../../../../modules/@angular/core/src/platform_directives_and_pipes.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,mBAA0B,MAAM,CAAC,CAAA;AAEjC;;;;;;;;;;;;;;;;;;;;;;;;;;;IA2BI;AACS,2BAAmB,GAAgB,IAAI,gBAAW,CAAC,qBAAqB,CAAC,CAAC;AAEvF;;;;;;;;;;;;;;;;;;;;;;;;;IAyBI;AACS,sBAAc,GAAgB,IAAI,gBAAW,CAAC,gBAAgB,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OpaqueToken} from './di';\n\n/**\n  * A token that can be provided when bootstrapping an application to make an array of directives\n  * available in every component of the application.\n  *\n  * ### Example\n  *\n  * ```typescript\n  * import {PLATFORM_DIRECTIVES} from '@angular/core';\n  * import {OtherDirective} from './myDirectives';\n  *\n  * @Component({\n  *   selector: 'my-component',\n  *   template: `\n  *     <!-- can use other directive even though the component does not list it in `directives` -->\n  *     <other-directive></other-directive>\n  *   `\n  * })\n  * export class MyComponent {\n  *   ...\n  * }\n  *\n  * bootstrap(MyComponent, [{provide: PLATFORM_DIRECTIVES, useValue: [OtherDirective],\n  multi:true}]);\n  * ```\n  *\n  * @deprecated Providing platform directives via a provider is deprecated. Provide platform\n  * directives via an {@link NgModule} instead.\n  */\nexport const PLATFORM_DIRECTIVES: OpaqueToken = new OpaqueToken('Platform Directives');\n\n/**\n  * A token that can be provided when bootstraping an application to make an array of pipes\n  * available in every component of the application.\n  *\n  * ### Example\n  *\n  * ```typescript\n  * import {PLATFORM_PIPES} from '@angular/core';\n  * import {OtherPipe} from './myPipe';\n  *\n  * @Component({\n  *   selector: 'my-component',\n  *   template: `\n  *     {{123 | other-pipe}}\n  *   `\n  * })\n  * export class MyComponent {\n  *   ...\n  * }\n  *\n  * bootstrap(MyComponent, [{provide: PLATFORM_PIPES, useValue: [OtherPipe], multi:true}]);\n  * ```\n  *\n  * @deprecated Providing platform pipes via a provider is deprecated. Provide platform pipes via an\n  * {@link NgModule} instead.\n  */\nexport const PLATFORM_PIPES: OpaqueToken = new OpaqueToken('Platform Pipes');\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}