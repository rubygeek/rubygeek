{"version":3,"file":"change_detection.js","sourceRoot":"","sources":["../../../../../modules/@angular/core/src/change_detection/change_detection.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAEH,wCAA2C,mCAAmC,CAAC,CAAA;AAC/E,wCAAiE,mCAAmC,CAAC,CAAA;AACrG,iCAAqD,4BAA4B,CAAC,CAAA;AAClF,iCAAqD,4BAA4B,CAAC,CAAA;AAGlF,sCAAsG,yBAAyB,CAAC;AAAxH,4DAAY;AAAE,8DAAa;AAAE,gEAAc;AAAE,4DAAY;AAAE,4DAAY;AAAE,gEAA+C;AAChI,oCAAgC,uBAAuB,CAAC;AAAhD,oEAAgD;AACxD,0BAAgI,aAAa,CAAC;AAAtI,wFAAgC;AAAE,sEAAuB;AAAE,gEAAoB;AAAE,wFAAqD;AAC9I,wCAAmE,mCAAmC,CAAC;AAA/F,kFAAsB;AAAE,8FAAuE;AACvG,wCAAoC,mCAAmC,CAAC;AAAhE,gFAAgE;AACxE,wCAAiE,mCAAmC,CAAC;AAA7F,8FAA4B;AAAE,8EAA+D;AACrG,iCAAgF,4BAA4B,CAAC;AAA9D,6DAA8D;AAC7G,iCAAqE,4BAA4B,CAAC;AAAnD,6DAAmD;AAKlG;;GAEG;AACU,kBAAU,GAA4B,CAAC,IAAI,sDAA4B,EAAE,CAAC,CAAC;AAExF;;GAEG;AACU,oBAAY,GAA4B,CAAC,IAAI,sDAA4B,EAAE,CAAC,CAAC;AAE7E,8BAAsB,GAAG,IAAI,kCAAe,CAAC,oBAAY,CAAC,CAAC;AAE3D,8BAAsB,GAAG,IAAI,kCAAe,CAAC,kBAAU,CAAC,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nimport {DefaultKeyValueDifferFactory, KeyValueChangeRecord} from './differs/default_keyvalue_differ';\nimport {IterableDifferFactory, IterableDiffers} from './differs/iterable_differs';\nimport {KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\n\nexport {SimpleChanges} from '../metadata/lifecycle_hooks';\nexport {SimpleChange, UNINITIALIZED, ValueUnwrapper, WrappedValue, devModeEqual, looseIdentical} from './change_detection_util';\nexport {ChangeDetectorRef} from './change_detector_ref';\nexport {CHANGE_DETECTION_STRATEGY_VALUES, ChangeDetectionStrategy, ChangeDetectorStatus, isDefaultChangeDetectionStrategy} from './constants';\nexport {CollectionChangeRecord, DefaultIterableDifferFactory} from './differs/default_iterable_differ';\nexport {DefaultIterableDiffer} from './differs/default_iterable_differ';\nexport {DefaultKeyValueDifferFactory, KeyValueChangeRecord} from './differs/default_keyvalue_differ';\nexport {IterableDiffer, IterableDifferFactory, IterableDiffers, TrackByFn} from './differs/iterable_differs';\nexport {KeyValueDiffer, KeyValueDifferFactory, KeyValueDiffers} from './differs/keyvalue_differs';\nexport {PipeTransform} from './pipe_transform';\n\n\n\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nexport const keyValDiff: KeyValueDifferFactory[] = [new DefaultKeyValueDifferFactory()];\n\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nexport const iterableDiff: IterableDifferFactory[] = [new DefaultIterableDifferFactory()];\n\nexport const defaultIterableDiffers = new IterableDiffers(iterableDiff);\n\nexport const defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}