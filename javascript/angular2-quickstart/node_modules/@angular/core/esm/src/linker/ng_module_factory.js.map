{"version":3,"file":"ng_module_factory.js","sourceRoot":"","sources":["../../../../../../modules/@angular/core/src/linker/ng_module_factory.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;OAEI,EAAC,QAAQ,EAAE,kBAAkB,EAAC,MAAM,gBAAgB;OACpD,EAAC,aAAa,EAAE,aAAa,EAAC,MAAM,sBAAsB;OAC1D,EAAe,SAAS,EAAC,MAAM,gBAAgB;OAG/C,EAAC,+BAA+B,EAAE,wBAAwB,EAAC,MAAM,8BAA8B;AAItG;;;;;;;GAOG;AACH;IACE;;OAEG;IACH,IAAI,QAAQ,KAAe,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IAEpD;;;OAGG;IACH,IAAI,wBAAwB,KAA+B,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;IAEpF;;OAEG;IACH,IAAI,QAAQ,KAAQ,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AAW/C,CAAC;AAED;;GAEG;AACH;IACE,YACY,cAAqE,EACrE,UAA2B;QAD3B,mBAAc,GAAd,cAAc,CAAuD;QACrE,eAAU,GAAV,UAAU,CAAiB;IAAG,CAAC;IAE3C,IAAI,UAAU,KAAsB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IAE7D,MAAM,CAAC,cAAwB;QAC7B,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACpB,cAAc,GAAG,QAAQ,CAAC,IAAI,CAAC;QACjC,CAAC;QACD,IAAI,QAAQ,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QACvD,QAAQ,CAAC,MAAM,EAAE,CAAC;QAClB,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;AACH,CAAC;AAED,MAAM,UAAU,GAAG,IAAI,MAAM,EAAE,CAAC;AAEhC,sCAAkD,+BAA+B;IAQ/E,YACW,MAAgB,EAAE,SAAkC,EACpD,kBAA2C;QACpD,MAAM,SAAS,EAAE,MAAM,CAAC,GAAG,CAAC,wBAAwB,EAAE,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC;QAF7E,WAAM,GAAN,MAAM,CAAU;QAChB,uBAAkB,GAAlB,kBAAkB,CAAyB;QAP9C,sBAAiB,GAAmB,EAAE,CAAC;QACvC,eAAU,GAAY,KAAK,CAAC;IAQpC,CAAC;IAED,MAAM,KAAK,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;IAInD,GAAG,CAAC,KAAU,EAAE,aAAa,GAAQ,kBAAkB;QACrD,EAAE,CAAC,CAAC,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,wBAAwB,CAAC,CAAC,CAAC;YAC7D,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QACjD,MAAM,CAAC,MAAM,KAAK,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE,aAAa,CAAC,GAAG,MAAM,CAAC;IAChF,CAAC;IAID,IAAI,QAAQ,KAAe,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAEzC,IAAI,wBAAwB,KAA+B,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAEzE,OAAO;QACL,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACpB,MAAM,IAAI,aAAa,CACnB,iBAAiB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,8BAA8B,CAAC,CAAC;QAC3F,CAAC;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAK,QAAQ,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED,SAAS,CAAC,QAAoB,IAAU,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAGlF,CAAC;AAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injector, THROW_IF_NOT_FOUND} from '../di/injector';\nimport {BaseException, unimplemented} from '../facade/exceptions';\nimport {ConcreteType, stringify} from '../facade/lang';\n\nimport {ComponentFactory} from './component_factory';\nimport {CodegenComponentFactoryResolver, ComponentFactoryResolver} from './component_factory_resolver';\n\n\n\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * @experimental\n */\nexport abstract class NgModuleRef<T> {\n  /**\n   * The injector that contains all of the providers of the NgModule.\n   */\n  get injector(): Injector { return unimplemented(); }\n\n  /**\n   * The ComponentFactoryResolver to get hold of the ComponentFactories\n   * delcared in the `entryComponents` property of the module.\n   */\n  get componentFactoryResolver(): ComponentFactoryResolver { return unimplemented(); }\n\n  /**\n   * The NgModule instance.\n   */\n  get instance(): T { return unimplemented(); }\n\n  /**\n   * Destroys the module instance and all of the data structures associated with it.\n   */\n  abstract destroy(): void;\n\n  /**\n   * Allows to register a callback that will be called when the module is destroyed.\n   */\n  abstract onDestroy(callback: () => void): void;\n}\n\n/**\n * @experimental\n */\nexport class NgModuleFactory<T> {\n  constructor(\n      private _injectorClass: {new (parentInjector: Injector): NgModuleInjector<T>},\n      private _moduleype: ConcreteType<T>) {}\n\n  get moduleType(): ConcreteType<T> { return this._moduleype; }\n\n  create(parentInjector: Injector): NgModuleRef<T> {\n    if (!parentInjector) {\n      parentInjector = Injector.NULL;\n    }\n    var instance = new this._injectorClass(parentInjector);\n    instance.create();\n    return instance;\n  }\n}\n\nconst _UNDEFINED = new Object();\n\nexport abstract class NgModuleInjector<T> extends CodegenComponentFactoryResolver implements\n    Injector,\n    NgModuleRef<T> {\n  private _destroyListeners: (() => void)[] = [];\n  private _destroyed: boolean = false;\n\n  public instance: T;\n\n  constructor(\n      public parent: Injector, factories: ComponentFactory<any>[],\n      public bootstrapFactories: ComponentFactory<any>[]) {\n    super(factories, parent.get(ComponentFactoryResolver, ComponentFactoryResolver.NULL));\n  }\n\n  create() { this.instance = this.createInternal(); }\n\n  abstract createInternal(): T;\n\n  get(token: any, notFoundValue: any = THROW_IF_NOT_FOUND): any {\n    if (token === Injector || token === ComponentFactoryResolver) {\n      return this;\n    }\n    var result = this.getInternal(token, _UNDEFINED);\n    return result === _UNDEFINED ? this.parent.get(token, notFoundValue) : result;\n  }\n\n  abstract getInternal(token: any, notFoundValue: any): any;\n\n  get injector(): Injector { return this; }\n\n  get componentFactoryResolver(): ComponentFactoryResolver { return this; }\n\n  destroy(): void {\n    if (this._destroyed) {\n      throw new BaseException(\n          `The ng module ${stringify(this.instance.constructor)} has already been destroyed.`);\n    }\n    this._destroyed = true;\n    this.destroyInternal();\n    this._destroyListeners.forEach((listener) => listener());\n  }\n\n  onDestroy(callback: () => void): void { this._destroyListeners.push(callback); }\n\n  abstract destroyInternal(): void;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}