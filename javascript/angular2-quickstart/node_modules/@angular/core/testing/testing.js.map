{"version":3,"file":"testing.js","sourceRoot":"","sources":["../../../../modules/@angular/core/testing/testing.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;AAUH,2BAAiC,cAAc,CAAC,CAAA;AAChD,yBAAsD,YAAY,CAAC,CAAA;AAInE,IAAI,OAAO,GAAQ,CAAC,OAAO,MAAM,KAAK,WAAW,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC;AAErE,qEAAqE;AACrE,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;IACvB,OAAO,CAAC,UAAU,CAAC;QACjB,kBAAO,CAAC,kBAAkB,EAAE,CAAC;QAC7B,+BAAkB,EAAE,CAAC;IACvB,CAAC,CAAC,CAAC;AACL,CAAC;AAED;;;;;GAKG;AACH,sBAA6B,SAAqB;IAChD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;QAAC,MAAM,CAAC;IACvB,kBAAO,CAAC,sBAAsB,CAAC,EAAC,SAAS,EAAE,SAAS,EAAC,CAAC,CAAC;AACzD,CAAC;AAHe,oBAAY,eAG3B,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Public Test Library for unit testing Angular2 Applications. Assumes that you are running\n * with Jasmine, Mocha, or a similar framework which exports a beforeEach function and\n * allows tests to be asynchronous by either returning a promise or using a 'done' parameter.\n */\n\nimport {SchemaMetadata} from '../index';\n\nimport {resetFakeAsyncZone} from './fake_async';\nimport {TestBed, TestModuleMetadata, getTestBed} from './test_bed';\n\ndeclare var global: any;\n\nvar _global = <any>(typeof window === 'undefined' ? global : window);\n\n// Reset the test providers and the fake async zone before each test.\nif (_global.beforeEach) {\n  _global.beforeEach(() => {\n    TestBed.resetTestingModule();\n    resetFakeAsyncZone();\n  });\n}\n\n/**\n * Allows overriding default providers of the test injector,\n * which are defined in test_injector.js\n *\n * @deprecated Use `TestBed.configureTestingModule instead.\n */\nexport function addProviders(providers: Array<any>): void {\n  if (!providers) return;\n  TestBed.configureTestingModule({providers: providers});\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}