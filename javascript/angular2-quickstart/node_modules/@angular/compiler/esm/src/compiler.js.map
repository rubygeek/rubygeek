{"version":3,"file":"compiler.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {COMPILER_OPTIONS, Compiler, CompilerFactory, CompilerOptions, Component, Inject, Injectable, PLATFORM_DIRECTIVES, PLATFORM_INITIALIZER, PLATFORM_PIPES, PlatformRef, ReflectiveInjector, Type, ViewEncapsulation, createPlatformFactory, isDevMode, platformCore} from '@angular/core';\n\nexport * from './template_parser/template_ast';\nexport {TEMPLATE_TRANSFORMS} from './template_parser/template_parser';\nexport {CompilerConfig, RenderTypes} from './config';\nexport * from './compile_metadata';\nexport * from './offline_compiler';\nexport {RuntimeCompiler} from './runtime_compiler';\nexport * from './url_resolver';\nexport * from './xhr';\n\nexport {DirectiveResolver} from './directive_resolver';\nexport {PipeResolver} from './pipe_resolver';\nexport {NgModuleResolver} from './ng_module_resolver';\n\nimport {stringify} from './facade/lang';\nimport {ListWrapper} from './facade/collection';\nimport {TemplateParser} from './template_parser/template_parser';\nimport {HtmlParser} from './ml_parser/html_parser';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {CompileMetadataResolver} from './metadata_resolver';\nimport {StyleCompiler} from './style_compiler';\nimport {ViewCompiler} from './view_compiler/view_compiler';\nimport {NgModuleCompiler} from './ng_module_compiler';\nimport {CompilerConfig} from './config';\nimport {RuntimeCompiler} from './runtime_compiler';\nimport {ElementSchemaRegistry} from './schema/element_schema_registry';\nimport {DomElementSchemaRegistry} from './schema/dom_element_schema_registry';\nimport {UrlResolver, DEFAULT_PACKAGE_URL_PROVIDER} from './url_resolver';\nimport {Parser} from './expression_parser/parser';\nimport {Lexer} from './expression_parser/lexer';\nimport {DirectiveResolver} from './directive_resolver';\nimport {PipeResolver} from './pipe_resolver';\nimport {NgModuleResolver} from './ng_module_resolver';\nimport {Console, Reflector, reflector, ReflectorReader, ReflectionCapabilities} from '../core_private';\nimport {XHR} from './xhr';\n\nconst _NO_XHR: XHR = {\n  get(url: string): Promise<string>{\n      throw new Error(`No XHR implementation has been provided. Can't read the url \"${url}\"`);}\n};\n\n/**\n * A set of providers that provide `RuntimeCompiler` and its dependencies to use for\n * template compilation.\n */\nexport const COMPILER_PROVIDERS: Array<any|Type|{[k: string]: any}|any[]> = [\n  {provide: Reflector, useValue: reflector},\n  {provide: ReflectorReader, useExisting: Reflector},\n  {provide: XHR, useValue: _NO_XHR},\n  Console,\n  Lexer,\n  Parser,\n  HtmlParser,\n  TemplateParser,\n  DirectiveNormalizer,\n  CompileMetadataResolver,\n  DEFAULT_PACKAGE_URL_PROVIDER,\n  StyleCompiler,\n  ViewCompiler,\n  NgModuleCompiler,\n  {provide: CompilerConfig, useValue: new CompilerConfig()},\n  RuntimeCompiler,\n  {provide: Compiler, useExisting: RuntimeCompiler},\n  DomElementSchemaRegistry,\n  {provide: ElementSchemaRegistry, useExisting: DomElementSchemaRegistry},\n  UrlResolver,\n  DirectiveResolver,\n  PipeResolver,\n  NgModuleResolver\n];\n\n\nexport function analyzeAppProvidersForDeprecatedConfiguration(appProviders: any[] = []):\n    {compilerOptions: CompilerOptions, moduleDeclarations: Type[], deprecationMessages: string[]} {\n  let platformDirectives: any[] = [];\n  let platformPipes: any[] = [];\n\n  let compilerProviders: any[] = [];\n  let useDebug: boolean;\n  let useJit: boolean;\n  let defaultEncapsulation: ViewEncapsulation;\n  const deprecationMessages: string[] = [];\n\n  // Note: This is a hack to still support the old way\n  // of configuring platform directives / pipes and the compiler xhr.\n  // This will soon be deprecated!\n  const tempInj = ReflectiveInjector.resolveAndCreate(appProviders);\n  const compilerConfig: CompilerConfig = tempInj.get(CompilerConfig, null);\n  if (compilerConfig) {\n    platformDirectives = compilerConfig.platformDirectives;\n    platformPipes = compilerConfig.platformPipes;\n    useJit = compilerConfig.useJit;\n    useDebug = compilerConfig.genDebugInfo;\n    defaultEncapsulation = compilerConfig.defaultEncapsulation;\n    deprecationMessages.push(\n        `Passing CompilerConfig as a regular provider is deprecated. Use the \"compilerOptions\" parameter of \"bootstrap()\" or use a custom \"CompilerFactory\" platform provider instead.`);\n  } else {\n    // If nobody provided a CompilerConfig, use the\n    // PLATFORM_DIRECTIVES / PLATFORM_PIPES values directly if existing\n    platformDirectives = tempInj.get(PLATFORM_DIRECTIVES, []);\n    platformPipes = tempInj.get(PLATFORM_PIPES, []);\n  }\n  platformDirectives = ListWrapper.flatten(platformDirectives);\n  platformPipes = ListWrapper.flatten(platformPipes);\n  const xhr = tempInj.get(XHR, null);\n  if (xhr) {\n    compilerProviders.push([{provide: XHR, useValue: xhr}]);\n    deprecationMessages.push(\n        `Passing XHR as regular provider is deprecated. Pass the provider via \"compilerOptions\" instead.`);\n  }\n\n  if (platformDirectives.length > 0) {\n    deprecationMessages.push(\n        `The PLATFORM_DIRECTIVES provider and CompilerConfig.platformDirectives is deprecated. Add the directives to an NgModule instead! ` +\n        `(Directives: ${platformDirectives.map(type => stringify(type))})`);\n  }\n  if (platformPipes.length > 0) {\n    deprecationMessages.push(\n        `The PLATFORM_PIPES provider and CompilerConfig.platformPipes is deprecated. Add the pipes to an NgModule instead! ` +\n        `(Pipes: ${platformPipes.map(type => stringify(type))})`);\n  }\n  const compilerOptions: CompilerOptions = {\n    useJit: useJit,\n    useDebug: useDebug,\n    defaultEncapsulation: defaultEncapsulation,\n    providers: compilerProviders\n  };\n  class DynamicComponent {\n  /** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{directives: platformDirectives, pipes: platformPipes, template: ''}, ] },\n];\n}\n\n  return {\n    compilerOptions,\n    moduleDeclarations: [DynamicComponent],\n    deprecationMessages: deprecationMessages\n  };\n}\nexport class RuntimeCompilerFactory implements CompilerFactory {\n  private _defaultOptions: CompilerOptions[];\n  constructor( defaultOptions: CompilerOptions[]) {\n    this._defaultOptions = [<CompilerOptions>{\n                             useDebug: isDevMode(),\n                             useJit: true,\n                             defaultEncapsulation: ViewEncapsulation.Emulated\n                           }].concat(defaultOptions);\n  }\n  createCompiler(options: CompilerOptions[] = []): Compiler {\n    const mergedOptions = _mergeOptions(this._defaultOptions.concat(options));\n    const injector = ReflectiveInjector.resolveAndCreate([\n      COMPILER_PROVIDERS, {\n        provide: CompilerConfig,\n        useFactory: () => {\n          return new CompilerConfig({\n            // let explicit values from the compiler options overwrite options\n            // from the app providers. E.g. important for the testing platform.\n            genDebugInfo: mergedOptions.useDebug,\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            useJit: mergedOptions.useJit,\n            // let explicit values from the compiler options overwrite options\n            // from the app providers\n            defaultEncapsulation: mergedOptions.defaultEncapsulation,\n            logBindingUpdate: mergedOptions.useDebug\n          });\n        },\n        deps: []\n      },\n      mergedOptions.providers\n    ]);\n    return injector.get(Compiler);\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Array, decorators: [{ type: Inject, args: [COMPILER_OPTIONS, ] }, ]},\n];\n}\n\nfunction _initReflector() {\n  reflector.reflectionCapabilities = new ReflectionCapabilities();\n}\n\n/**\n * A platform that included corePlatform and the compiler.\n *\n * @experimental\n */\nexport const platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [\n  {provide: COMPILER_OPTIONS, useValue: {}, multi: true},\n  {provide: CompilerFactory, useClass: RuntimeCompilerFactory},\n  {provide: PLATFORM_INITIALIZER, useValue: _initReflector, multi: true},\n]);\n\nfunction _mergeOptions(optionsArr: CompilerOptions[]): CompilerOptions {\n  return {\n    useDebug: _lastDefined(optionsArr.map(options => options.useDebug)),\n    useJit: _lastDefined(optionsArr.map(options => options.useJit)),\n    defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n    providers: _mergeArrays(optionsArr.map(options => options.providers))\n  };\n}\n\nfunction _lastDefined<T>(args: T[]): T {\n  for (var i = args.length - 1; i >= 0; i--) {\n    if (args[i] !== undefined) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\n\nfunction _mergeArrays(parts: any[][]): any[] {\n  let result: any[] = [];\n  parts.forEach((part) => part && result.push(...part));\n  return result;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}