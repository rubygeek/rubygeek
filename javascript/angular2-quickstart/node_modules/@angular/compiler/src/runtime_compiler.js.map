{"version":3,"file":"runtime_compiler.js","sourceRoot":"","sources":["../../../../modules/@angular/compiler/src/runtime_compiler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Compiler, ComponentFactory, ComponentResolver, ComponentStillLoadingError, Injectable, Injector, ModuleWithComponentFactories, NgModule, NgModuleFactory, NgModuleMetadata, OptionalMetadata, Provider, SchemaMetadata, SkipSelfMetadata} from '@angular/core';\n\nimport {Console} from '../core_private';\n\nimport {CompileDirectiveMetadata, CompileIdentifierMetadata, CompileNgModuleMetadata, CompilePipeMetadata, createHostComponentMeta} from './compile_metadata';\nimport {CompilerConfig} from './config';\nimport {DirectiveNormalizer} from './directive_normalizer';\nimport {BaseException} from './facade/exceptions';\nimport {ConcreteType, Type, isBlank, isString, stringify} from './facade/lang';\nimport {CompileMetadataResolver} from './metadata_resolver';\nimport {NgModuleCompiler} from './ng_module_compiler';\nimport * as ir from './output/output_ast';\nimport {interpretStatements} from './output/output_interpreter';\nimport {jitStatements} from './output/output_jit';\nimport {CompiledStylesheet, StyleCompiler} from './style_compiler';\nimport {TemplateParser} from './template_parser/template_parser';\nimport {SyncAsyncResult} from './util';\nimport {ComponentFactoryDependency, ViewCompiler, ViewFactoryDependency} from './view_compiler/view_compiler';\nexport class RuntimeCompiler implements Compiler {\n  private _compiledTemplateCache = new Map<Type, CompiledTemplate>();\n  private _compiledHostTemplateCache = new Map<Type, CompiledTemplate>();\n  private _compiledNgModuleCache = new Map<Type, NgModuleFactory<any>>();\n\n  constructor(\n      private _injector: Injector, private _metadataResolver: CompileMetadataResolver,\n      private _templateNormalizer: DirectiveNormalizer, private _templateParser: TemplateParser,\n      private _styleCompiler: StyleCompiler, private _viewCompiler: ViewCompiler,\n      private _ngModuleCompiler: NgModuleCompiler, private _compilerConfig: CompilerConfig,\n      private _console: Console) {}\n\n  get injector(): Injector { return this._injector; }\n\n  compileModuleSync<T>(moduleType: ConcreteType<T>): NgModuleFactory<T> {\n    return this._compileModuleAndComponents(moduleType, true).syncResult;\n  }\n\n  compileModuleAsync<T>(moduleType: ConcreteType<T>): Promise<NgModuleFactory<T>> {\n    return this._compileModuleAndComponents(moduleType, false).asyncResult;\n  }\n\n  compileModuleAndAllComponentsSync<T>(moduleType: ConcreteType<T>):\n      ModuleWithComponentFactories<T> {\n    return this._compileModuleAndAllComponents(moduleType, true).syncResult;\n  }\n\n  compileModuleAndAllComponentsAsync<T>(moduleType: ConcreteType<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._compileModuleAndAllComponents(moduleType, false).asyncResult;\n  }\n\n  compileComponentAsync<T>(compType: ConcreteType<T>, ngModule: ConcreteType<any> = null):\n      Promise<ComponentFactory<T>> {\n    if (!ngModule) {\n      throw new BaseException(\n          `Calling compileComponentAsync on the root compiler without a module is not allowed! (Compiling component ${stringify(compType)})`);\n    }\n    return this._compileComponentInModule(compType, false, ngModule).asyncResult;\n  }\n\n  compileComponentSync<T>(compType: ConcreteType<T>, ngModule: ConcreteType<any> = null):\n      ComponentFactory<T> {\n    if (!ngModule) {\n      throw new BaseException(\n          `Calling compileComponentSync on the root compiler without a module is not allowed! (Compiling component ${stringify(compType)})`);\n    }\n    return this._compileComponentInModule(compType, true, ngModule).syncResult;\n  }\n\n  private _compileModuleAndComponents<T>(moduleType: ConcreteType<T>, isSync: boolean):\n      SyncAsyncResult<NgModuleFactory<T>> {\n    const componentPromise = this._compileComponents(moduleType, isSync);\n    const ngModuleFactory = this._compileModule(moduleType);\n    return new SyncAsyncResult(ngModuleFactory, componentPromise.then(() => ngModuleFactory));\n  }\n\n  private _compileModuleAndAllComponents<T>(moduleType: ConcreteType<T>, isSync: boolean):\n      SyncAsyncResult<ModuleWithComponentFactories<T>> {\n    const componentPromise = this._compileComponents(moduleType, isSync);\n    const ngModuleFactory = this._compileModule(moduleType);\n    const moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType);\n    const componentFactories: ComponentFactory<any>[] = [];\n    const templates = new Set<CompiledTemplate>();\n    moduleMeta.transitiveModule.modules.forEach((moduleMeta) => {\n      moduleMeta.declaredDirectives.forEach((dirMeta) => {\n        if (dirMeta.isComponent) {\n          const template = this._createCompiledHostTemplate(dirMeta.type.runtime);\n          templates.add(template);\n          componentFactories.push(template.proxyComponentFactory);\n        }\n      });\n    });\n    const syncResult = new ModuleWithComponentFactories(ngModuleFactory, componentFactories);\n    // Note: host components themselves can always be compiled synchronously as they have an\n    // inline template. However, we still need to wait for the components that they\n    // reference to be loaded / compiled.\n    const compile = () => {\n      templates.forEach((template) => { this._compileTemplate(template); });\n      return syncResult;\n    };\n    const asyncResult = isSync ? Promise.resolve(compile()) : componentPromise.then(compile);\n    return new SyncAsyncResult(syncResult, asyncResult);\n  }\n\n  private _compileModule<T>(moduleType: ConcreteType<T>): NgModuleFactory<T> {\n    let ngModuleFactory = this._compiledNgModuleCache.get(moduleType);\n    if (!ngModuleFactory) {\n      const moduleMeta = this._metadataResolver.getNgModuleMetadata(moduleType);\n      const transitiveModuleMeta = moduleMeta.transitiveModule;\n      let boundCompilerFactory = (parentResolver: ComponentResolver) =>\n          new ModuleBoundCompiler(this, moduleMeta.type.runtime, parentResolver, this._console);\n      // Always provide a bound Compiler and ComponentResolver\n      const extraProviders = [\n        this._metadataResolver.getProviderMetadata(new Provider(Compiler, {\n          useFactory: boundCompilerFactory,\n          deps: [[new OptionalMetadata(), new SkipSelfMetadata(), ComponentResolver]]\n        })),\n        this._metadataResolver.getProviderMetadata(\n            new Provider(ComponentResolver, {useExisting: Compiler}))\n      ];\n      var compileResult = this._ngModuleCompiler.compile(moduleMeta, extraProviders);\n      compileResult.dependencies.forEach((dep) => {\n        dep.placeholder.runtime =\n            this._assertComponentKnown(dep.comp.runtime, true).proxyComponentFactory;\n        dep.placeholder.name = `compFactory_${dep.comp.name}`;\n      });\n      if (!this._compilerConfig.useJit) {\n        ngModuleFactory =\n            interpretStatements(compileResult.statements, compileResult.ngModuleFactoryVar);\n      } else {\n        ngModuleFactory = jitStatements(\n            `${moduleMeta.type.name}.ngfactory.js`, compileResult.statements,\n            compileResult.ngModuleFactoryVar);\n      }\n      this._compiledNgModuleCache.set(moduleMeta.type.runtime, ngModuleFactory);\n    }\n    return ngModuleFactory;\n  }\n\n  private _compileComponentInModule<T>(\n      compType: ConcreteType<T>, isSync: boolean,\n      moduleType: ConcreteType<any>): SyncAsyncResult<ComponentFactory<T>> {\n    this._metadataResolver.addComponentToModule(moduleType, compType);\n\n    const componentPromise = this._compileComponents(moduleType, isSync);\n    const componentFactory: ComponentFactory<T> =\n        this._assertComponentKnown(compType, true).proxyComponentFactory;\n\n    return new SyncAsyncResult(componentFactory, componentPromise.then(() => componentFactory));\n  }\n\n  /**\n   * @internal\n   */\n  _compileComponents(mainModule: Type, isSync: boolean): Promise<any> {\n    const templates = new Set<CompiledTemplate>();\n    var loadingPromises: Promise<any>[] = [];\n\n    const ngModule = this._metadataResolver.getNgModuleMetadata(mainModule);\n    ngModule.transitiveModule.modules.forEach((localModuleMeta) => {\n      localModuleMeta.declaredDirectives.forEach((dirMeta) => {\n        if (dirMeta.isComponent) {\n          templates.add(this._createCompiledTemplate(dirMeta, localModuleMeta));\n          dirMeta.entryComponents.forEach((entryComponentType) => {\n            templates.add(this._createCompiledHostTemplate(entryComponentType.runtime));\n          });\n        }\n      });\n      localModuleMeta.entryComponents.forEach((entryComponentType) => {\n        templates.add(this._createCompiledHostTemplate(entryComponentType.runtime));\n      });\n    });\n    templates.forEach((template) => {\n      if (template.loading) {\n        if (isSync) {\n          throw new ComponentStillLoadingError(template.compType.runtime);\n        } else {\n          loadingPromises.push(template.loading);\n        }\n      }\n    });\n    const compile =\n        () => { templates.forEach((template) => { this._compileTemplate(template); }); };\n    if (isSync) {\n      compile();\n      return Promise.resolve(null);\n    } else {\n      return Promise.all(loadingPromises).then(compile);\n    }\n  }\n\n  clearCacheFor(type: Type) {\n    this._compiledNgModuleCache.delete(type);\n    this._metadataResolver.clearCacheFor(type);\n    this._compiledHostTemplateCache.delete(type);\n    var compiledTemplate = this._compiledTemplateCache.get(type);\n    if (compiledTemplate) {\n      this._templateNormalizer.clearCacheFor(compiledTemplate.normalizedCompMeta);\n      this._compiledTemplateCache.delete(type);\n    }\n  }\n\n  clearCache(): void {\n    this._metadataResolver.clearCache();\n    this._compiledTemplateCache.clear();\n    this._compiledHostTemplateCache.clear();\n    this._templateNormalizer.clearCache();\n    this._compiledNgModuleCache.clear();\n  }\n\n  private _createCompiledHostTemplate(compType: Type): CompiledTemplate {\n    var compiledTemplate = this._compiledHostTemplateCache.get(compType);\n    if (isBlank(compiledTemplate)) {\n      var compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n      assertComponent(compMeta);\n      var hostMeta = createHostComponentMeta(compMeta);\n      compiledTemplate = new CompiledTemplate(\n          true, compMeta.selector, compMeta.type, [compMeta], [], [],\n          this._templateNormalizer.normalizeDirective(hostMeta));\n      this._compiledHostTemplateCache.set(compType, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n\n  private _createCompiledTemplate(\n      compMeta: CompileDirectiveMetadata, ngModule: CompileNgModuleMetadata): CompiledTemplate {\n    var compiledTemplate = this._compiledTemplateCache.get(compMeta.type.runtime);\n    if (isBlank(compiledTemplate)) {\n      assertComponent(compMeta);\n      compiledTemplate = new CompiledTemplate(\n          false, compMeta.selector, compMeta.type, ngModule.transitiveModule.directives,\n          ngModule.transitiveModule.pipes, ngModule.schemas,\n          this._templateNormalizer.normalizeDirective(compMeta));\n      this._compiledTemplateCache.set(compMeta.type.runtime, compiledTemplate);\n    }\n    return compiledTemplate;\n  }\n\n  private _assertComponentKnown(compType: any, isHost: boolean): CompiledTemplate {\n    const compiledTemplate = isHost ? this._compiledHostTemplateCache.get(compType) :\n                                      this._compiledTemplateCache.get(compType);\n    if (!compiledTemplate) {\n      throw new BaseException(\n          `Illegal state: CompiledTemplate for ${stringify(compType)} (isHost: ${isHost}) does not exist!`);\n    }\n    return compiledTemplate;\n  }\n\n  private _assertComponentLoaded(compType: any, isHost: boolean): CompiledTemplate {\n    const compiledTemplate = this._assertComponentKnown(compType, isHost);\n    if (compiledTemplate.loading) {\n      throw new BaseException(\n          `Illegal state: CompiledTemplate for ${stringify(compType)} (isHost: ${isHost}) is still loading!`);\n    }\n    return compiledTemplate;\n  }\n\n  private _compileTemplate(template: CompiledTemplate) {\n    if (template.isCompiled) {\n      return;\n    }\n    const compMeta = template.normalizedCompMeta;\n    const externalStylesheetsByModuleUrl = new Map<string, CompiledStylesheet>();\n    const stylesCompileResult = this._styleCompiler.compileComponent(compMeta);\n    stylesCompileResult.externalStylesheets.forEach(\n        (r) => { externalStylesheetsByModuleUrl.set(r.meta.moduleUrl, r); });\n    this._resolveStylesCompileResult(\n        stylesCompileResult.componentStylesheet, externalStylesheetsByModuleUrl);\n    const viewCompMetas = template.viewComponentTypes.map(\n        (compType) => this._assertComponentLoaded(compType, false).normalizedCompMeta);\n    const parsedTemplate = this._templateParser.parse(\n        compMeta, compMeta.template.template, template.viewDirectives.concat(viewCompMetas),\n        template.viewPipes, template.schemas, compMeta.type.name);\n    const compileResult = this._viewCompiler.compileComponent(\n        compMeta, parsedTemplate, ir.variable(stylesCompileResult.componentStylesheet.stylesVar),\n        template.viewPipes);\n    compileResult.dependencies.forEach((dep) => {\n      let depTemplate: CompiledTemplate;\n      if (dep instanceof ViewFactoryDependency) {\n        let vfd = <ViewFactoryDependency>dep;\n        depTemplate = this._assertComponentLoaded(vfd.comp.runtime, false);\n        vfd.placeholder.runtime = depTemplate.proxyViewFactory;\n        vfd.placeholder.name = `viewFactory_${vfd.comp.name}`;\n      } else if (dep instanceof ComponentFactoryDependency) {\n        let cfd = <ComponentFactoryDependency>dep;\n        depTemplate = this._assertComponentLoaded(cfd.comp.runtime, true);\n        cfd.placeholder.runtime = depTemplate.proxyComponentFactory;\n        cfd.placeholder.name = `compFactory_${cfd.comp.name}`;\n      }\n    });\n    const statements =\n        stylesCompileResult.componentStylesheet.statements.concat(compileResult.statements);\n    let factory: any;\n    if (!this._compilerConfig.useJit) {\n      factory = interpretStatements(statements, compileResult.viewFactoryVar);\n    } else {\n      factory = jitStatements(\n          `${template.compType.name}.ngfactory.js`, statements, compileResult.viewFactoryVar);\n    }\n    template.compiled(factory);\n  }\n\n  private _resolveStylesCompileResult(\n      result: CompiledStylesheet, externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>) {\n    result.dependencies.forEach((dep, i) => {\n      var nestedCompileResult = externalStylesheetsByModuleUrl.get(dep.moduleUrl);\n      var nestedStylesArr = this._resolveAndEvalStylesCompileResult(\n          nestedCompileResult, externalStylesheetsByModuleUrl);\n      dep.valuePlaceholder.runtime = nestedStylesArr;\n      dep.valuePlaceholder.name = `importedStyles${i}`;\n    });\n  }\n\n  private _resolveAndEvalStylesCompileResult(\n      result: CompiledStylesheet,\n      externalStylesheetsByModuleUrl: Map<string, CompiledStylesheet>): string[] {\n    this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n    if (!this._compilerConfig.useJit) {\n      return interpretStatements(result.statements, result.stylesVar);\n    } else {\n      return jitStatements(`${result.meta.moduleUrl}.css.js`, result.statements, result.stylesVar);\n    }\n  }\n/** @nocollapse */\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: {type: Function, decorators?: DecoratorInvocation[]}[] = [\n{type: Injector, },\n{type: CompileMetadataResolver, },\n{type: DirectiveNormalizer, },\n{type: TemplateParser, },\n{type: StyleCompiler, },\n{type: ViewCompiler, },\n{type: NgModuleCompiler, },\n{type: CompilerConfig, },\n{type: Console, },\n];\n}\n\nclass CompiledTemplate {\n  private _viewFactory: Function = null;\n  proxyViewFactory: Function;\n  proxyComponentFactory: ComponentFactory<any>;\n  loading: Promise<any> = null;\n  private _normalizedCompMeta: CompileDirectiveMetadata = null;\n  isCompiled = false;\n  isCompiledWithDeps = false;\n  viewComponentTypes: Type[] = [];\n  viewDirectives: CompileDirectiveMetadata[] = [];\n\n  constructor(\n      public isHost: boolean, selector: string, public compType: CompileIdentifierMetadata,\n      viewDirectivesAndComponents: CompileDirectiveMetadata[],\n      public viewPipes: CompilePipeMetadata[], public schemas: SchemaMetadata[],\n      _normalizeResult: SyncAsyncResult<CompileDirectiveMetadata>) {\n    viewDirectivesAndComponents.forEach((dirMeta) => {\n      if (dirMeta.isComponent) {\n        this.viewComponentTypes.push(dirMeta.type.runtime);\n      } else {\n        this.viewDirectives.push(dirMeta);\n      }\n    });\n    this.proxyViewFactory = (...args: any[]) => {\n      if (!this._viewFactory) {\n        throw new BaseException(\n            `Illegal state: CompiledTemplate for ${stringify(this.compType)} is not compiled yet!`);\n      }\n      return this._viewFactory.apply(null, args);\n    };\n    this.proxyComponentFactory = isHost ?\n        new ComponentFactory<any>(selector, this.proxyViewFactory, compType.runtime) :\n        null;\n    if (_normalizeResult.syncResult) {\n      this._normalizedCompMeta = _normalizeResult.syncResult;\n    } else {\n      this.loading = _normalizeResult.asyncResult.then((normalizedCompMeta) => {\n        this._normalizedCompMeta = normalizedCompMeta;\n        this.loading = null;\n      });\n    }\n  }\n\n  get normalizedCompMeta(): CompileDirectiveMetadata {\n    if (this.loading) {\n      throw new BaseException(`Template is still loading for ${this.compType.name}!`);\n    }\n    return this._normalizedCompMeta;\n  }\n\n  compiled(viewFactory: Function) {\n    this._viewFactory = viewFactory;\n    this.isCompiled = true;\n  }\n\n  depsCompiled() { this.isCompiledWithDeps = true; }\n}\n\nfunction assertComponent(meta: CompileDirectiveMetadata) {\n  if (!meta.isComponent) {\n    throw new BaseException(`Could not compile '${meta.type.name}' because it is not a component.`);\n  }\n}\n\n/**\n * Implements `Compiler` and `ComponentResolver` by delegating\n * to the RuntimeCompiler using a known module.\n */\nclass ModuleBoundCompiler implements Compiler, ComponentResolver {\n  private _warnOnComponentResolver = true;\n\n  constructor(\n      private _delegate: RuntimeCompiler, private _ngModule: ConcreteType<any>,\n      private _parentComponentResolver: ComponentResolver, private _console: Console) {}\n\n  get _injector(): Injector { return this._delegate.injector; }\n\n  resolveComponent(component: Type|string): Promise<ComponentFactory<any>> {\n    if (isString(component)) {\n      if (this._parentComponentResolver) {\n        return this._parentComponentResolver.resolveComponent(component);\n      } else {\n        return <Promise<any>>Promise.reject(\n            new BaseException(`Cannot resolve component using '${component}'.`));\n      }\n    }\n    if (this._warnOnComponentResolver) {\n      this._console.warn(ComponentResolver.DynamicCompilationDeprecationMsg);\n      this._warnOnComponentResolver = false;\n    }\n    return this.compileComponentAsync(<ConcreteType<any>>component);\n  }\n\n  compileComponentAsync<T>(compType: ConcreteType<T>, ngModule: ConcreteType<any> = null):\n      Promise<ComponentFactory<T>> {\n    return this._delegate.compileComponentAsync(compType, ngModule ? ngModule : this._ngModule);\n  }\n\n  compileComponentSync<T>(compType: ConcreteType<T>, ngModule: ConcreteType<any> = null):\n      ComponentFactory<T> {\n    return this._delegate.compileComponentSync(compType, ngModule ? ngModule : this._ngModule);\n  }\n\n  compileModuleSync<T>(moduleType: ConcreteType<T>): NgModuleFactory<T> {\n    return this._delegate.compileModuleSync(moduleType);\n  }\n\n  compileModuleAsync<T>(moduleType: ConcreteType<T>): Promise<NgModuleFactory<T>> {\n    return this._delegate.compileModuleAsync(moduleType);\n  }\n  compileModuleAndAllComponentsSync<T>(moduleType: ConcreteType<T>):\n      ModuleWithComponentFactories<T> {\n    return this._delegate.compileModuleAndAllComponentsSync(moduleType);\n  }\n\n  compileModuleAndAllComponentsAsync<T>(moduleType: ConcreteType<T>):\n      Promise<ModuleWithComponentFactories<T>> {\n    return this._delegate.compileModuleAndAllComponentsAsync(moduleType);\n  }\n\n  /**\n   * Clears all caches\n   */\n  clearCache(): void {\n    this._delegate.clearCache();\n    if (this._parentComponentResolver) {\n      this._parentComponentResolver.clearCache();\n    }\n  }\n\n  /**\n   * Clears the cache for the given component/ngModule.\n   */\n  clearCacheFor(type: Type) { this._delegate.clearCacheFor(type); }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}