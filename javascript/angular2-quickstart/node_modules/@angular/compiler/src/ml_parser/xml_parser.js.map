{"version":3,"file":"xml_parser.js","sourceRoot":"","sources":["../../../../../modules/@angular/compiler/src/ml_parser/xml_parser.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;;;;;;;AAEH,uBAAsC,UAAU,CAAC,CAAA;AACjD,yBAAkC,YAAY,CAAC,CAAA;AAE/C,uBAAyC,UAAU,CAAC;AAA5C,mDAAe;AAAE,uCAA2B;AAEpD;IAA+B,6BAAM;IACnC;QAAgB,kBAAM,8BAAmB,CAAC,CAAC;IAAC,CAAC;IAE7C,yBAAK,GAAL,UAAM,MAAc,EAAE,GAAW,EAAE,mBAAoC;QAApC,mCAAoC,GAApC,2BAAoC;QACrE,MAAM,CAAC,gBAAK,CAAC,KAAK,YAAC,MAAM,EAAE,GAAG,EAAE,mBAAmB,EAAE,IAAI,CAAC,CAAC;IAC7D,CAAC;IACH,gBAAC;AAAD,CAAC,AAND,CAA+B,eAAM,GAMpC;AANY,iBAAS,YAMrB,CAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ParseTreeResult, Parser} from './parser';\nimport {getXmlTagDefinition} from './xml_tags';\n\nexport {ParseTreeResult, TreeError} from './parser';\n\nexport class XmlParser extends Parser {\n  constructor() { super(getXmlTagDefinition); }\n\n  parse(source: string, url: string, parseExpansionForms: boolean = false): ParseTreeResult {\n    return super.parse(source, url, parseExpansionForms, null);\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}