{"version":3,"file":"xtb.js","sourceRoot":"","sources":["../../../../../../modules/@angular/compiler/src/i18n/serializers/xtb.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ml from '../../ml_parser/ast';\nimport {HtmlParser} from '../../ml_parser/html_parser';\nimport {InterpolationConfig} from '../../ml_parser/interpolation_config';\nimport {XmlParser} from '../../ml_parser/xml_parser';\nimport {ParseError} from '../../parse_util';\nimport * as i18n from '../i18n_ast';\nimport {I18nError} from '../parse_util';\n\nimport {Serializer} from './serializer';\n\nconst _TRANSLATIONS_TAG = 'translationbundle';\nconst _TRANSLATION_TAG = 'translation';\nconst _PLACEHOLDER_TAG = 'ph';\n\nexport class Xtb implements Serializer {\n  constructor(private _htmlParser: HtmlParser, private _interpolationConfig: InterpolationConfig) {}\n\n  write(messageMap: {[id: string]: i18n.Message}): string { throw new Error('Unsupported'); }\n\n  load(content: string, url: string, placeholders: {[id: string]: {[name: string]: string}}):\n      {[id: string]: ml.Node[]} {\n    // Parse the xtb file into xml nodes\n    const result = new XmlParser().parse(content, url);\n\n    if (result.errors.length) {\n      throw new Error(`xtb parse errors:\\n${result.errors.join('\\n')}`);\n    }\n\n    // Replace the placeholders, messages are now string\n    const {messages, errors} = new _Serializer().parse(result.rootNodes, placeholders);\n\n    if (errors.length) {\n      throw new Error(`xtb parse errors:\\n${errors.join('\\n')}`);\n    }\n\n    // Convert the string messages to html ast\n    // TODO(vicb): map error message back to the original message in xtb\n    let messageMap: {[id: string]: ml.Node[]} = {};\n    let parseErrors: ParseError[] = [];\n\n    Object.keys(messages).forEach((id) => {\n      const res = this._htmlParser.parse(messages[id], url, true, this._interpolationConfig);\n      parseErrors.push(...res.errors);\n      messageMap[id] = res.rootNodes;\n    });\n\n    if (parseErrors.length) {\n      throw new Error(`xtb parse errors:\\n${parseErrors.join('\\n')}`);\n    }\n\n    return messageMap;\n  }\n}\n\nclass _Serializer implements ml.Visitor {\n  private _messages: {[id: string]: string};\n  private _bundleDepth: number;\n  private _translationDepth: number;\n  private _errors: I18nError[];\n  private _placeholders: {[id: string]: {[name: string]: string}};\n  private _currentPlaceholders: {[name: string]: string};\n\n  parse(nodes: ml.Node[], _placeholders: {[id: string]: {[name: string]: string}}):\n      {messages: {[k: string]: string}, errors: I18nError[]} {\n    this._messages = {};\n    this._bundleDepth = 0;\n    this._translationDepth = 0;\n    this._errors = [];\n    this._placeholders = _placeholders;\n\n    ml.visitAll(this, nodes, null);\n\n    return {messages: this._messages, errors: this._errors};\n  }\n\n  visitElement(element: ml.Element, context: any): any {\n    switch (element.name) {\n      case _TRANSLATIONS_TAG:\n        this._bundleDepth++;\n        if (this._bundleDepth > 1) {\n          this._addError(element, `<${_TRANSLATIONS_TAG}> elements can not be nested`);\n        }\n        ml.visitAll(this, element.children, null);\n        this._bundleDepth--;\n        break;\n\n      case _TRANSLATION_TAG:\n        this._translationDepth++;\n        if (this._translationDepth > 1) {\n          this._addError(element, `<${_TRANSLATION_TAG}> elements can not be nested`);\n        }\n        const idAttr = element.attrs.find((attr) => attr.name === 'id');\n        if (!idAttr) {\n          this._addError(element, `<${_TRANSLATION_TAG}> misses the \"id\" attribute`);\n        } else {\n          this._currentPlaceholders = this._placeholders[idAttr.value] || {};\n          this._messages[idAttr.value] = ml.visitAll(this, element.children).join('');\n        }\n        this._translationDepth--;\n        break;\n\n      case _PLACEHOLDER_TAG:\n        const nameAttr = element.attrs.find((attr) => attr.name === 'name');\n        if (!nameAttr) {\n          this._addError(element, `<${_PLACEHOLDER_TAG}> misses the \"name\" attribute`);\n        } else {\n          if (this._currentPlaceholders.hasOwnProperty(nameAttr.value)) {\n            return this._currentPlaceholders[nameAttr.value];\n          }\n          this._addError(\n              element, `The placeholder \"${nameAttr.value}\" does not exists in the source message`);\n        }\n        break;\n\n      default:\n        this._addError(element, 'Unexpected tag');\n    }\n  }\n\n  visitAttribute(attribute: ml.Attribute, context: any): any {\n    throw new Error('unreachable code');\n  }\n\n  visitText(text: ml.Text, context: any): any { return text.value; }\n\n  visitComment(comment: ml.Comment, context: any): any { return ''; }\n\n  visitExpansion(expansion: ml.Expansion, context: any): any {\n    const strCases = expansion.cases.map(c => c.visit(this, null));\n\n    return `{${expansion.switchValue}, ${expansion.type}, strCases.join(' ')}`;\n  }\n\n  visitExpansionCase(expansionCase: ml.ExpansionCase, context: any): any {\n    return `${expansionCase.value} {${ml.visitAll(this, expansionCase.expression, null)}}`;\n  }\n\n  private _addError(node: ml.Node, message: string): void {\n    this._errors.push(new I18nError(node.sourceSpan, message));\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}